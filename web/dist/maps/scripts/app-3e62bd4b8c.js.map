{"version":3,"sources":["scripts/app.js"],"names":["angular","module","webDevTec","getTec","data","title","url","description","logo","this","service","acmeNavbar","NavbarController","moment","vm","relativeDate","creationDate","fromNow","$inject","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","$log","githubContributor","activate","getContributors","then","info","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","get","apiHost","factory","TestSeriesListController","CommonInfo","$state","_","user","getInfo","setInfo","id","getAllTestSeries","post","getAppUrl","userId","Error","testSeries","showExam","go","TestAnswersController","getUserAnswers","testUser","testId","userAnswers","selectedLang","score","getTestUsers","totalCorrect","totalIncorrect","totalUnanswered","questions","length","userInfo","subjectWise","subjectId","total","correct","unanswered","incorrect","name","subjectName","userAnswer","find","questionId","userAnsKey","answer","correctAnswer","result","answers","ansKey","answerText","ansText","correctAnsKey","totalAttempt","difficultyMeter","round","difficultyRange","inRange","rangeFrom","rangeTill","text","push","childQuestions","filter","parentQuestionId","passage","question","concat","withEvaluatedStatus","testUsers","getHtml","allowed","html2canvas","document","getElementById","onrendered","canvas","toDataURL","docDefinition","content","image","width","pdfMake","createPdf","download","TestController","growl","$uibModal","Upload","$window","getAllTests","getAllSubjects","tests","getTestById","test","editTest","mode","objMode","getAllquestionPapers","startDate","Date","endDate","attachment","split","updateTest","copy","join","success","deleteTest","confirm","evaluation","evaluationAll","isForced","offlineScore","file","console","log","offLineScoreFile","upload","resp","users","open","animation","size","$scope","item","ok","resolve","status","evt","progressPercentage","parseInt","loaded","config","removeAllOfflineSores","difficultyMetrix","recheck","getTestSeriesById","testSeriesId","editTestSeries","addTestSeries","createdBy","updateTestSeries","modifiedBy","publishTestSeries","isPublished","getTestSeriesUsers","holdSelection","questionPapers","editQuestionPaper","questionPaper","quesPaper","subjectList","subjects","addSubject","subject","deleteQuestionPaper","quesPaperId","questionPaperId","showQuestions","getAllQuestions","pageNo","currentPage","page","perPage","questionCount","recordCount","lastPage","Math","ceil","questionSelection","selectedQuestionGrid","map","isSelected","isQuestionSelected","getQuestionById","editQuestion","getNewAnswerSet","isDeleted","addChildQuestion","i","updateQuestion","addNew","deleteQuestion","addToPaper","paperId","questionIds","clearQuestionSelection","exportTestUsers","toString","getTestUserPagination","currentTestUserPage","testUserCount","lastTestUserPage","showTestPreview","isPreview","href","importQuestion","testSelection","selectedTestGrid","isTestSelected","testSeriesList","getAllTestSeriesName","selectAllTest","isAllTestSelected","clearTestSelection","tabChange","tab","selectedTab","addToTestSeries","testIds","Message","formats","format","toolBar","questionType","keyCode","StudentListController","searchText","timeSpent","duration","searchStudent","showAnswers","sarchText","SeriesStudentController","series","getSeriesStudent","students","studentsCount","lastStudentPage","currentStudentPage","QuestionListController","ExamListController","getAllExams","durationInHrs","isUpcoming","isBefore","exams","startExam","instructionBoard","resize","elem","attrs","call","css","innerHeight","questionArea","navigationArea","ExamController","$interval","exam","timer","getExamQuestions","userInfoLocalStorage","getUserTestInfo","key","userCurrentQuestion","isMarked","compareTimestamp","userTestInfo","timeRemaining","alert","submitExam","showLangChoice","questionText","timestamp","isExamStarted","showQuestion","localSubmit","saveLocal","serverSubmit","event","toState","toParams","fromState","fromParams","isExamEnded","preventDefault","stopNavigation","questionNo","currentIndex","currentQuestionIndex","currentQuestion","userTime","isInProcess","cancel","undefined","submitAttempt","args","millis","CourseStudentController","course","getCourseUsers","courseId","courseUsers","courseUserCount","lastCoursUserPage","currentCourseUserPage","MainController","credentials","getCredentials","profileType","is","courseLibary","getMyCourses","getUnits","editUser","getAllCourses","showCategoryModal","getAllLessons","userType","getUsers","editCourse","editLesson","lesson","showLessonComments","courses","searchCourse","subscribeCourse","phone","fullName","email","purpose","amt","subscriptionFee","window","code","selectCourse","navigateToPage","units","selectLesson","lessons","comments","files","filePath","replace","video","options","poster","androidhls","player","aspectratio","commentOnLesson","lessonId","comment","commentMsg","newComment","commentedBy","profilePhoto","lessonComments","getCourseById","categories","validTo","instructors","isForever","isSendMail","addUnitToCourse","values","compact","courseUnit","addUserToCourse","selectedInstructor","courseUser","updateCourse","method","deleteCourse","publishCourse","showCourseStudent","getLessonById","newFiles","courseUnitList","changeCourse","unitList","courseName","addFilesToLesson","uniqBy","updateLesson","deleteLesson","getLessonComments","unSelectAll","usersRecordCount","usersCurrentPage","usersLastPage","userSelection","selectedUserGrid","isUserSelected","coursesNameList","getCoursesName","getTestSeriesList","selectedAllStudents","isAllUserSelected","addStudentToCourse","addStudentToTestSeries","approveUser","put","getUserById","updateProfile","sendMail","getAllBatches","batches","editBatch","batch","addBatch","signout","reset","showCourseDemo","demoVideo","demoPoster","showCourseInfo","courseDesc","downloadFile","fileName","addCategory","newCategory","categoryPopup","isCollapsed","dateOptions","formatYear","startingDay","loginArea","ResetPasswordController","$stateParams","token","resetPassword","password","confirmPassword","LoginController","$location","$timeout","showPage","userName","signup","newUser","forget","activeForm","Code","isEmail","isPhone","forgetPassword","absUrl","substring","indexOf","host","requestOtp","showResendOtp","otp","secret","codeStr","isOtpSend","otpTimeout","validateOtp","isOtpValid","isOtp","isLoginPage","htmlToPlaintext","String","charCodeToChar","fromCharCode","jwplayerjs","$compile","playerId","setupVars","element","newValue","oldValue","floor","random","getTemplate","html","contents","jwplayer","setup","whenScrollEnds","visibleHeight","threshold","scroll","scrollableHeight","prop","hiddenContentHeight","scrollTop","$apply","$localStorage","getInfoObj","infoObj","obj","$reset","tabs","library","allCourses","myCourses","allLessons","instructor","createCourse","createLesson","createTest","createQuestionPaper","createQuestion","Modal","openModal","modalInstance","selectedItem","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","abstract","otherwise","constant","$logProvider","growlProvider","blockUIConfig","debugEnabled","globalReversedOrder","globalTimeToLive","globalDisableIcons","delay","$templateCache"],"mappings":"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","file":"scripts/app-3e62bd4b8c.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('web', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ui.router',\n            'ui.bootstrap',\n            'toastr',\n            'ngStorage',\n            'ngFileUpload',\n            'angular-growl',\n            'blockUI',\n            'textAngular',\n            'rt.resize',\n            'timer'\n        ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('web')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('web')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('web')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('web')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('TestSeriesListController', TestSeriesListController);\r\n\r\n    /** @ngInject */\r\n    function TestSeriesListController($http, CommonInfo, $state, _) {\r\n        var vm = this;\r\n\r\n        vm.showExam = showExam;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.user = CommonInfo.getInfo('user');\r\n            CommonInfo.setInfo('testSeries', '');\r\n            if(vm.user && vm.user.id)\r\n                getAllTestSeries();\r\n        }\r\n\r\n        function getAllTestSeries(){\r\n            $http.post(CommonInfo.getAppUrl() + '/api/testSeries/byUser', { 'userId': vm.user.id }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testSeries = response.data.testSeries;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function showExam(testSeries) {\r\n            if(testSeries && testSeries.id){\r\n                CommonInfo.setInfo('testSeries', testSeries);\r\n                $state.go('main.examsList');\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('TestAnswersController', TestAnswersController);\r\n\r\n    /** @ngInject */\r\n    function TestAnswersController($http, CommonInfo, _) {\r\n        var vm = this;\r\n\r\n        var difficultyRange = [{\r\n            rangeFrom: 0,\r\n            rangeTill: 21,\r\n            text: 'Extremely Difficult'\r\n        },\r\n        {\r\n            rangeFrom: 21,\r\n            rangeTill: 36,\r\n            text: 'Difficult'\r\n        },\r\n        {\r\n            rangeFrom: 36,\r\n            rangeTill: 51,\r\n            text: 'Average'\r\n        },\r\n        {\r\n            rangeFrom: 51,\r\n            rangeTill: 71,\r\n            text: 'Easy'\r\n        },\r\n        {\r\n            rangeFrom: 71,\r\n            rangeTill: 101,\r\n            text: 'Very Easy'\r\n        }];\r\n        var testUser = {};\r\n\r\n        vm.subjectWise = {};\r\n        vm.selectedLang = 1;\r\n\r\n        vm.getHtml = getHtml;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            // vm.exam = CommonInfo.getInfo('exam');\r\n            // vm.user = CommonInfo.getInfo('user');\r\n            getUserAnswers();\r\n        }\r\n\r\n        function getUserAnswers() {\r\n            testUser = CommonInfo.getInfo('testAnswer');\r\n            var data = {\r\n                userId: testUser.userId, //vm.user.id,\r\n                testId: testUser.testId //vm.exam.id\r\n            };\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/userAnswers', data).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.userAnswers = response.data.userAnswers;\r\n                    vm.selectedLang = vm.userAnswers.selectedLang;\r\n                    if(vm.userAnswers.score){\r\n                        getTestUsers();\r\n                    }\r\n                    vm.userAnswers.totalCorrect = 0;\r\n                    vm.userAnswers.totalIncorrect = 0;\r\n                    vm.userAnswers.totalUnanswered = 0;\r\n                    if (vm.userAnswers && vm.userAnswers.questions && vm.userAnswers.questions.length > 0) {\r\n                        if (vm.userAnswers.userInfo && vm.userAnswers.userInfo.length > 0) {\r\n                            _.forEach(vm.userAnswers.questions, function(value) {\r\n                                if (value.type != 'Passage') {\r\n                                    vm.subjectWise[value.subjectId] = vm.subjectWise[value.subjectId] || { total: 0, correct: 0, unanswered: 0, incorrect: 0 };\r\n                                    vm.subjectWise[value.subjectId].name = value.subjectName;\r\n                                    vm.subjectWise[value.subjectId].total++;\r\n\r\n                                    var userAnswer = _.find(vm.userAnswers.userInfo, { 'questionId': value.id });\r\n                                    value.userAnsKey = userAnswer ? userAnswer.answer : null;\r\n                                    if (value.userAnsKey == value.correctAnswer) {\r\n                                        vm.userAnswers.totalCorrect++;\r\n                                        vm.subjectWise[value.subjectId].correct++;\r\n                                        value.result = 'correct';\r\n                                    } else if (!value.userAnsKey) {\r\n                                        vm.userAnswers.totalUnanswered++;\r\n                                        vm.subjectWise[value.subjectId].unanswered++;\r\n                                        value.result = 'unanswered';\r\n                                    } else {\r\n                                        vm.subjectWise[value.subjectId].incorrect++;\r\n                                        vm.userAnswers.totalIncorrect++;\r\n                                        value.result = 'incorrect';\r\n                                    }\r\n                                    if (value.userAnsKey) {\r\n                                        if (vm.selectedLang == 1)\r\n                                            value.userAnswer = _.find(value.answers, { 'ansKey': value.userAnsKey }).answerText;\r\n                                        else\r\n                                            value.userAnswer = _.find(value.answers, { 'ansKey': value.userAnsKey }).ansText;\r\n                                    } else {\r\n                                        value.userAnswer = \"Not Answered\"\r\n                                    }\r\n                                    value.correctAnsKey = value.correctAnswer;\r\n                                    if (value.correctAnswer) {\r\n                                        if (vm.selectedLang == 1)\r\n                                            value.correctAnswer = _.find(value.answers, { 'ansKey': value.correctAnswer }).answerText;\r\n                                        else\r\n                                            value.correctAnswer = _.find(value.answers, { 'ansKey': value.correctAnswer }).ansText;\r\n                                    }\r\n                                    if (value.totalAttempt) {\r\n                                        var difficultyMeter = _.round((value.correct / value.totalAttempt) * 100);\r\n                                        value.difficultyMeter = _.find(difficultyRange, function(value){\r\n                                            return _.inRange(difficultyMeter, value.rangeFrom, value.rangeTill);\r\n                                        }).text;\r\n                                    }\r\n                                }\r\n                            });\r\n                            vm.questions = [];\r\n                            _.forEach(vm.userAnswers.questions, function(value) {\r\n                                if (value.type == 'MCQ') {\r\n                                    vm.questions.push(value);\r\n                                } else if (value.type == 'Passage') {\r\n                                    var childQuestions = _.filter(vm.userAnswers.questions, { 'parentQuestionId': value.id });\r\n                                    childQuestions[0].passage = value.question;\r\n                                    vm.questions = vm.questions.concat(childQuestions);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getTestUsers() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/test/users', { 'testId': testUser.testId, withEvaluatedStatus: true }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testUsers = response.data.testUsers;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getHtml() {\r\n            // var html = angular.element(document.getElementById('solution')).html()\r\n            // $http.post(CommonInfo.getAppUrl() + '/api/exam/userAnswersPdf', { html: html }).then(function(response) {\r\n            //     if(response && response.data && !response.data.Error) {\r\n            //         console.log(response.data.url)\r\n            //     }\r\n            // }, function(response) {});\r\n\r\n            if (vm.allowed) {\r\n                html2canvas(document.getElementById('exportthis'), {\r\n                    onrendered: function(canvas) {\r\n                        var data = canvas.toDataURL();\r\n                        var docDefinition = {\r\n                            content: [{\r\n                                image: data,\r\n                                width: 500\r\n                            }]\r\n                        };\r\n                        pdfMake.createPdf(docDefinition).download(\"Score_Details.pdf\");\r\n                    }\r\n                });\r\n\r\n                // var html = angular.element(document.getElementById('exportthis')).html()\r\n                // $http.post(CommonInfo.getAppUrl() + '/api/exam/userAnswersPdf', { html: html }).then(function(response) {\r\n                //     if(response && response.data && !response.data.Error) {\r\n                //         console.log(response.data.url)\r\n                //         window.open(response.data.url, \"_blank\")\r\n                //     }\r\n                // }, function(response) {});\r\n            } else {\r\n                vm.allowed = true\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('TestController', TestController);\r\n\r\n    /** @ngInject */\r\n    function TestController($http, CommonInfo, $state, growl, $uibModal, Upload, _, $window) {\r\n        var vm = this;\r\n        var selectedQuestionGrid = [];\r\n        var selectedTestGrid = [];\r\n        var inProcess = false;\r\n\r\n        vm.userInfo;\r\n        vm.objMode;\r\n        vm.selectedTab = 1;\r\n        vm.isQuestionSelected = false;\r\n        vm.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\r\n        vm.format = 'dd-MMMM-yyyy';\r\n        vm.toolBar = [\r\n            ['h1', 'h2', 'h3', 'bold', 'italics', 'underline'],\r\n            ['ol', 'ul'],\r\n            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\r\n            ['html', 'insertImage', 'insertLink', 'insertVideo']\r\n        ];\r\n        vm.questionType = ['MCQ', \"Passage\"];\r\n        vm.currentPage = 1;\r\n        vm.keyCode = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't'];\r\n\r\n        vm.getAllTestSeries = getAllTestSeries;\r\n        vm.getTestSeriesById = getTestSeriesById;\r\n        vm.editTestSeries = editTestSeries;\r\n        vm.addTestSeries = addTestSeries;\r\n        vm.updateTestSeries = updateTestSeries;\r\n        vm.publishTestSeries = publishTestSeries;\r\n        vm.getTestSeriesUsers = getTestSeriesUsers;\r\n        vm.getAllTests = getAllTests;\r\n        vm.getTestById = getTestById;\r\n        vm.editTest = editTest;\r\n        vm.updateTest = updateTest\r\n        vm.deleteTest = deleteTest;\r\n        vm.evaluation = evaluation;\r\n        vm.evaluationAll = evaluationAll;\r\n        vm.offlineScore = offlineScore;\r\n        vm.removeAllOfflineSores = removeAllOfflineSores;\r\n        vm.difficultyMetrix = difficultyMetrix;\r\n        vm.recheck = recheck;\r\n        vm.getAllquestionPapers = getAllquestionPapers;\r\n        vm.editQuestionPaper = editQuestionPaper;\r\n        vm.addSubject = addSubject;\r\n        vm.deleteQuestionPaper = deleteQuestionPaper;\r\n        vm.showQuestions = showQuestions;\r\n        vm.getAllQuestions = getAllQuestions;\r\n        vm.questionSelection = questionSelection;\r\n        vm.getQuestionById = getQuestionById;\r\n        vm.editQuestion = editQuestion;\r\n        vm.addChildQuestion = addChildQuestion;\r\n        vm.updateQuestion = updateQuestion;\r\n        vm.deleteQuestion = deleteQuestion;\r\n        vm.addToPaper = addToPaper;\r\n        vm.importQuestion = importQuestion;\r\n        vm.getTestUsers = getTestUsers;\r\n        vm.exportTestUsers = exportTestUsers;\r\n        vm.getTestUserPagination = getTestUserPagination;\r\n        vm.showTestPreview = showTestPreview;\r\n        vm.testSelection = testSelection;\r\n        vm.selectAllTest = selectAllTest;\r\n        vm.testSelection = testSelection;\r\n        vm.addToTestSeries = addToTestSeries;\r\n        vm.tabChange = tabChange;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.userInfo = CommonInfo.getInfo('user');\r\n            getAllTests();\r\n            getAllSubjects();\r\n        }\r\n\r\n        //////// Test related ///////////////////////////////////////////////////////////\r\n        function getAllTests() {\r\n            //resetQuestionSelection();\r\n            $http.get(CommonInfo.getAppUrl() + '/api/test/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.tests = response.data.tests;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getTestById(testId) {\r\n            if (testId) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/test/byId', { 'testId': testId }).then(function(response) {\r\n                    if (response && response.data && response.data.test) {\r\n                        vm.test = response.data.test;\r\n                        editTest('edit', vm.test);\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function editTest(mode, test) {\r\n            vm.objMode = mode;\r\n            getAllquestionPapers();\r\n            if (mode == 'edit') {\r\n                $state.go('main.test.editTest');\r\n                vm.test = test;\r\n                vm.test.startDate = vm.test.startDate ? new Date(vm.test.startDate) : \"\";\r\n                vm.test.endDate = vm.test.endDate ? new Date(vm.test.endDate) : \"\";\r\n                vm.test.attachment = vm.test.attachment ? vm.test.attachment.split(',') : [];\r\n            } else if (mode == 'insert') {\r\n                vm.test = {\r\n                    attachment: []\r\n                };\r\n                $state.go('main.test.createTest');\r\n            }\r\n        }\r\n\r\n        function updateTest() {\r\n            if (vm.test) {\r\n                var test = angular.copy(vm.test);\r\n                test.attachment = test.attachment.join(',');\r\n                $http.post(CommonInfo.getAppUrl() + '/api/test', test).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Test added successfully');\r\n                        $state.go('main.test.home');\r\n                        getAllTests();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function deleteTest(testId) {\r\n            if (confirm('Are you sure, you want to delete test')) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/test/delete', { 'testId': testId }).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Test deleted successfully');\r\n                        getAllTests();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function evaluation(testId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/instantEvaluation', { 'testId': testId }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Test evaluation successfully');\r\n                    //getAllTests();\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function evaluationAll(testId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/evaluation', { 'testId': testId, 'isForced': true }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Test evaluation successfully');\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function offlineScore(file, testId) {\r\n            console.log(vm.tests.offLineScoreFile)\r\n            if (vm.tests.offLineScoreFile) {\r\n                Upload.upload({\r\n                    url: CommonInfo.getAppUrl() + '/api/test/importOfflineScores',\r\n                    data: {\r\n                        file: vm.tests.offLineScoreFile,\r\n                        testId: testId\r\n                    }\r\n                }).then(function(resp) {\r\n                    // console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                    if (resp && resp.data && resp.data.result && resp.data.result.users && resp.data.result.users.length > 0) {\r\n                        var modalInstance = $uibModal.open({\r\n                            animation: true,\r\n                            templateUrl: 'app/test/addOfflineScores.html',\r\n                            size: 'lg',\r\n                            controller: function($scope, item) {\r\n                                $scope.users = item.users;\r\n                                $scope.testId = item.testId;\r\n                                $scope.ok = function() {\r\n                                    var data = {\r\n                                        users: $scope.users,\r\n                                        testId: $scope.testId\r\n                                    };\r\n                                    $http.post(CommonInfo.getAppUrl() + '/api/test/addOfflineScores', data).then(function(response) {\r\n                                        if (response && response.data && !response.data.Error) {\r\n                                            growl.success('Scores added successfully');\r\n                                            getAllTests();\r\n                                        }\r\n                                    }, function(response) {});\r\n                                };\r\n                            },\r\n                            resolve: {\r\n                                item: function() {\r\n                                    return resp.data.result;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }, function(resp) {\r\n                    console.log('Error status: ' + resp.status);\r\n                }, function(evt) {\r\n                    var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                    console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n                });\r\n            }\r\n        }\r\n\r\n        function removeAllOfflineSores(testId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/test/deleteOfflineScores', { 'testId': testId }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Offline scores removed successfully');\r\n                    getAllTests();\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function difficultyMetrix() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/question/difficulty', {}).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Question evaluation successfully');\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function recheck(testId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/reCheckAnswers', { 'testId': testId }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Test recheck successfully');\r\n                    //getAllTests();\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        /////////// Test series related //////////////////////////////////////////////////////////\r\n\r\n        function getAllTestSeries() {\r\n            //resetQuestionSelection();\r\n            $http.get(CommonInfo.getAppUrl() + '/api/testSeries/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.testSeries = response.data.testSeries;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getTestSeriesById(testSeriesId) {\r\n            if (testSeriesId) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/testSeries/byId', { 'testSeriesId': testSeriesId }).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        vm.testSeries = response.data.testSeries;\r\n                        editTestSeries('edit', vm.testSeries);\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function editTestSeries(mode, testSeries) {\r\n            vm.objMode = mode;\r\n            vm.testSeries = testSeries || {};\r\n            //getAllquestionPapers();\r\n            if (mode == 'edit') {\r\n                $state.go('main.test.editTestSeries');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.test.createTestSeries');\r\n            }\r\n        }\r\n\r\n        function addTestSeries() {\r\n            if (vm.testSeries) {\r\n                vm.testSeries.createdBy = vm.userInfo.id;\r\n                $http.post(CommonInfo.getAppUrl() + '/api/testSeries', vm.testSeries).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Test series added successfully');\r\n                        $state.go('main.test.home');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function updateTestSeries() {\r\n            if (vm.testSeries) {\r\n                vm.testSeries.modifiedBy = vm.userInfo.id;\r\n                $http.post(CommonInfo.getAppUrl() + '/api/testSeries/update', vm.testSeries).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Test series updates successfully');\r\n                        $state.go('main.test.home');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function publishTestSeries(testSeries) {\r\n            if (testSeries) {\r\n                var status = testSeries.isPublished ? \"unpublished\" : \"publish\"\r\n                if (testSeries && confirm('Are you sure you want to ' + status + ' ' + testSeries.name)) {\r\n                    testSeries.isPublished = !testSeries.isPublished;\r\n                    testSeries.modifiedBy = vm.userInfo.id;\r\n                    $http.post(CommonInfo.getAppUrl() + '/api/testSeries/update', testSeries).then(function(response) {\r\n                        if (response && response.data && !response.data.Error) {\r\n                            growl.success('Test series ' + status + ' successfully');\r\n                        }\r\n                    }, function(response) {});\r\n                }\r\n            }\r\n        }\r\n\r\n        function getTestSeriesUsers(testSeries) {\r\n            CommonInfo.setInfo('series', testSeries);\r\n            $state.go('main.test.testSeriesStudent');\r\n        }\r\n\r\n        ////////// Question Paper related ////////////////////////////////////////////////////////\r\n        function getAllquestionPapers(holdSelection) {\r\n            // if (!holdSelection)\r\n            //     resetQuestionSelection();\r\n            $http.get(CommonInfo.getAppUrl() + '/api/questionPaper/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.questionPapers = response.data.questionPapers;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function editQuestionPaper(mode, questionPaper) {\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'editQuestionPaper.html',\r\n                controller: function($scope, item) {\r\n                    $scope.quesPaper = item;\r\n                    $scope.ok = function() {\r\n                        if ($scope.quesPaper.name) {\r\n                            $http.post(CommonInfo.getAppUrl() + '/api/questionPaper', $scope.quesPaper).then(function(response) {\r\n                                if (response && response.data && !response.data.Error) {\r\n                                    growl.success('Question paper added successfully');\r\n                                }\r\n                            }, function(response) {});\r\n                        }\r\n                    };\r\n                },\r\n                resolve: {\r\n                    item: function() {\r\n                        return questionPaper || {};\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function getAllSubjects() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/subject/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.subjectList = response.data.subjects;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function addSubject() {\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'addSubjects.html',\r\n                controller: function($scope, item) {\r\n                    $scope.subjects = item;\r\n                    $scope.ok = function() {\r\n                        if ($scope.subject.name) {\r\n                            $http.post(CommonInfo.getAppUrl() + '/api/subject', $scope.subject).then(function(response) {\r\n                                if (response && response.data && !response.data.Error) {\r\n                                    growl.success('Subject added successfully');\r\n                                    getAllSubjects();\r\n                                }\r\n                            }, function(response) {});\r\n                        }\r\n                    };\r\n                },\r\n                resolve: {\r\n                    item: function() {\r\n                        return vm.subjectList || [];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function deleteQuestionPaper(quesPaperId) {\r\n            if (confirm('Are you sure, you want to delete question paper')) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/questionPaper/delete', { 'questionPaperId': quesPaperId }).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Test deleted successfully');\r\n                        getAllquestionPapers();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function showQuestions(questionPaper) {\r\n            if (questionPaper) {\r\n                CommonInfo.setInfo('selectedQuestionPaper', questionPaper);\r\n                $state.go('main.test.questionList');\r\n            }\r\n        }\r\n\r\n        //////////Question related ////////////////////////////////////////////////////\r\n        function getAllQuestions(pageNo) {\r\n            vm.currentPage = pageNo;\r\n            $http.post(CommonInfo.getAppUrl() + '/api/question/all', { page: pageNo, perPage: 40 }).then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.questions = response.data.questions;\r\n                    vm.questionCount = response.data.recordCount;\r\n                    vm.lastPage = Math.ceil(vm.questionCount / 40) || 1;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function questionSelection() {\r\n            selectedQuestionGrid = _.map(_.filter(vm.questions, { 'isSelected': true }), 'id');\r\n            if (selectedQuestionGrid && selectedQuestionGrid.length > 0) {\r\n                vm.isQuestionSelected = true;\r\n                if (!vm.questionPapers)\r\n                    getAllquestionPapers(true);\r\n            } else {\r\n                vm.isQuestionSelected = false;\r\n            }\r\n        }\r\n\r\n        function getQuestionById(questionId) {\r\n            if (questionId) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question/byId', { 'questionId': questionId }).then(function(response) {\r\n                    if (response && response.data && response.data.question) {\r\n                        vm.question = response.data.question;\r\n                        editQuestion('edit', vm.question);\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function editQuestion(mode, question) {\r\n            vm.objMode = mode;\r\n            vm.question = question || {};\r\n            vm.question.correctAnswer = vm.question.correctAnswer || '';\r\n            if (!vm.question.answers) {\r\n                vm.question.answers = getNewAnswerSet();\r\n            }\r\n            if (!vm.question.childQuestions) {\r\n                vm.question.childQuestions = [{ correctAnswer: '', question: '', isDeleted: 0, answers: getNewAnswerSet() }];\r\n            }\r\n            if (mode == 'edit') {\r\n                $state.go('main.test.editQuestion');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.test.createQuestion');\r\n            }\r\n        }\r\n\r\n        function addChildQuestion() {\r\n            vm.question.childQuestions.push({ correctAnswer: '', question: '', isDeleted: 0, answers: getNewAnswerSet() });\r\n        }\r\n\r\n        function getNewAnswerSet() {\r\n            var answers = [];\r\n            for (var i = 0; i < 4; i++)\r\n                answers.push({ answerText: '', isDeleted: 0 });\r\n            return answers;\r\n        }\r\n\r\n        function updateQuestion(addNew) {\r\n            if (vm.question) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question', vm.question).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Question added successfully');\r\n                        if (!addNew) {\r\n                            $state.go('main.test.home');\r\n                            getAllQuestions();\r\n                        } else {\r\n                            vm.question = {\r\n                                answers: getNewAnswerSet(),\r\n                                childQuestions: [{ question: '', isDeleted: 0, answers: getNewAnswerSet() }]\r\n                            };\r\n                        }\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function deleteQuestion(questionId) {\r\n            if (confirm('Are you sure, you want to delete question')) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question/delete', { 'questionId': questionId }).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Question deleted successfully');\r\n                        getAllQuestions();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function addToPaper(paperId) {\r\n            if (paperId && selectedQuestionGrid && selectedQuestionGrid.length > 0) {\r\n                var data = {\r\n                    questionPaperId: paperId,\r\n                    questionIds: selectedQuestionGrid\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question/addToPaper', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Question added successfully');\r\n                        clearQuestionSelection();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function exportTestUsers(test) {\r\n            // $http.post(CommonInfo.getAppUrl() + '/api/test/usersExport', { 'testId': test.id }).then(function (response) {\r\n            //     var blob = new Blob([response.data], {type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"});\r\n            //     var objectUrl = URL.createObjectURL(blob);\r\n            //     window.open(objectUrl);\r\n            // }, function(response) {});\r\n            $http.post(CommonInfo.getAppUrl() + '/api/test/usersExport', { 'testId': test.id }).then(function(response) {\r\n                if (response && response.data && response.data.url) {\r\n                    console.log(response.data.url)\r\n                    $window.open(response.data.url.toString());\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getTestUsers(test) {\r\n            CommonInfo.setInfo('testResultList', test);\r\n            $state.go('main.test.studentList');\r\n            // vm.currentTestUserPage = 1;\r\n            // vm.selectedTest = test;\r\n            // $http.post(CommonInfo.getAppUrl() + '/api/test/users', { 'testId': test.id }).then(function(response) {\r\n            //     if (response && response.data && !response.data.Error) {\r\n            //         vm.testUsers = response.data.testUsers;\r\n            //         vm.testUserCount = response.data.recordCount;\r\n            //         vm.lastTestUserPage = Math.ceil(vm.testUserCount / 40) || 1;\r\n            //         $state.go('main.test.studentList');\r\n            //     }\r\n            // }, function(response) {});\r\n        }\r\n\r\n        function getTestUserPagination(test, pageNo) {\r\n            vm.currentTestUserPage = pageNo;\r\n            $http.post(CommonInfo.getAppUrl() + '/api/test/users', { 'testId': test.id, 'page': pageNo, 'perPage': 40 }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testUsers = response.data.testUsers;\r\n                    vm.testUserCount = response.data.recordCount;\r\n                    vm.lastTestUserPage = Math.ceil(vm.testUserCount / 40);\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function showTestPreview(test) {\r\n            test.isPreview = true\r\n            CommonInfo.setInfo('exam', test);\r\n            $window.open($state.href('main.exam', { isPreview: true }), '_blank');\r\n        }\r\n\r\n        function importQuestion(file, quesPaperId) {\r\n            console.log(vm.question.file)\r\n            if (vm.question.file) {\r\n                Upload.upload({\r\n                    url: CommonInfo.getAppUrl() + '/api/question/import',\r\n                    data: {\r\n                        file: vm.question.file,\r\n                        questionPaperId: quesPaperId\r\n                    }\r\n                }).then(function(resp) {\r\n                    // console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                    if (resp && resp.data && resp.data.result && resp.data.result.questions && resp.data.result.questions.length > 0) {\r\n                        var item = {\r\n                            subjects: vm.subjectList,\r\n                            data: resp.data.result\r\n                        };\r\n                        var modalInstance = $uibModal.open({\r\n                            animation: true,\r\n                            templateUrl: 'app/test/importQuestion.html',\r\n                            size: 'lg',\r\n                            controller: function($scope, item) {\r\n                                $scope.questions = item.data.questions;\r\n                                $scope.questionPaperId = item.data.questionPaperId;\r\n                                $scope.subjects = item.subjects;\r\n                                $scope.ok = function() {\r\n                                    var data = {\r\n                                        questions: $scope.questions,\r\n                                        questionPaperId: $scope.questionPaperId\r\n                                    };\r\n                                    $http.post(CommonInfo.getAppUrl() + '/api/question/add', data).then(function(response) {\r\n                                        if (response && response.data && !response.data.Error) {\r\n                                            growl.success('Questions added successfully');\r\n                                            getAllquestionPapers();\r\n                                        }\r\n                                    }, function(response) {});\r\n                                };\r\n                            },\r\n                            resolve: {\r\n                                item: function() {\r\n                                    return item;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }, function(resp) {\r\n                    console.log('Error status: ' + resp.status);\r\n                }, function(evt) {\r\n                    var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                    console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n                });\r\n            }\r\n        }\r\n\r\n        function clearQuestionSelection() {\r\n            _.forEach(vm.questions, function(value) {\r\n                value.isSelected = false;\r\n            });\r\n            questionSelection();\r\n        }\r\n\r\n        function testSelection() {\r\n            selectedTestGrid = _.map(_.filter(vm.tests, { 'isSelected': true }), 'id');\r\n            if (selectedTestGrid && selectedTestGrid.length > 0) {\r\n                vm.isTestSelected = true;\r\n                if (!vm.testSeriesList)\r\n                    getAllTestSeriesName();\r\n            } else {\r\n                vm.isTestSelected = false;\r\n            }\r\n        }\r\n\r\n        function getAllTestSeriesName() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/testSeries/nameList').then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testSeriesList = response.data.testSeries;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function selectAllTest() {\r\n            if (vm.tests && vm.tests.length > 0) {\r\n                _.forEach(vm.tests, function(value) {\r\n                    value.isSelected = vm.isAllTestSelected;\r\n                });\r\n                testSelection();\r\n            }\r\n        }\r\n\r\n        function clearTestSelection() {\r\n            _.forEach(vm.tests, function(value) {\r\n                value.isSelected = false;\r\n            });\r\n            vm.isAllTestSelected = false;\r\n            testSelection();\r\n        }\r\n\r\n        function tabChange(tab) {\r\n            vm.selectedTab = tab;\r\n            clearTestSelection();\r\n            clearQuestionSelection();\r\n        }\r\n\r\n        function addToTestSeries(testSeriesId) {\r\n            if (selectedTestGrid && selectedTestGrid.length > 0) {\r\n                var data = {\r\n                    testSeriesId: testSeriesId,\r\n                    testIds: selectedTestGrid\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/testSeries/addTest', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success(response.data.Message);\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('StudentListController', StudentListController);\r\n\r\n    /** @ngInject */\r\n    function StudentListController($http, CommonInfo, $state, growl, _) {\r\n        var vm = this;\r\n        var perPage = 40;\r\n        var test;\r\n\r\n        vm.currentTestUserPage = 1;\r\n        vm.sarchText = '';\r\n        vm.testUsers = [];\r\n        vm.testUserCount = 0;\r\n        vm.lastTestUserPage = 0;\r\n\r\n        vm.searchStudent = searchStudent;\r\n        vm.showAnswers = showAnswers;\r\n        vm.getTestUsers = getTestUsers;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            test = CommonInfo.getInfo('testResultList');\r\n            if (test && test.id) {\r\n                getTestUsers(1);\r\n            }\r\n        }\r\n\r\n        function getTestUsers(pageNo) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/test/users', { 'testId': test.id, 'searchText': vm.searchText, 'page': pageNo }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testUsers = response.data.testUsers;\r\n                    _.forEach(vm.testUsers, function(value) {\r\n                        value.timeSpent = moment.duration(value.timeSpent, 'seconds').format(\"HH:mm:ss\");\r\n                    });\r\n                    vm.testUserCount = response.data.recordCount;\r\n                    vm.lastTestUserPage = Math.ceil(vm.testUserCount / perPage) || 1;\r\n                    vm.currentTestUserPage = pageNo;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function searchStudent() {\r\n            getTestUsers(1);\r\n        }\r\n\r\n        function showAnswers(userId) {\r\n            var data = { userId: userId, testId: test.id };\r\n            CommonInfo.setInfo('testAnswer', data);\r\n            $state.go('main.examAnswers');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('SeriesStudentController', SeriesStudentController);\r\n\r\n    /** @ngInject */\r\n    function SeriesStudentController($http, CommonInfo, $state, growl) {\r\n        var vm = this;\r\n        var perPage = 40;\r\n        var series;\r\n\r\n        vm.currentStudentPage = 1;\r\n        vm.sarchText = '';\r\n        vm.students = [];\r\n        vm.studentsCount = 0;\r\n        vm.lastStudentPage = 0;\r\n\r\n        vm.searchStudent = searchStudent;\r\n        vm.getSeriesStudent = getSeriesStudent;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            series = CommonInfo.getInfo('series');\r\n            if (series && series.id) {\r\n                getSeriesStudent(1);\r\n            }\r\n        }\r\n\r\n        function getSeriesStudent(pageNo) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/testSeries/userList', { 'testSeriesId': series.id, 'searchText': vm.searchText, 'page': pageNo }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.students = response.data.students;\r\n                    vm.studentsCount = response.data.recordCount;\r\n                    vm.lastStudentPage = Math.ceil(vm.studentsCount / perPage) || 1;\r\n                    vm.currentStudentPage = pageNo;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function searchStudent() {\r\n            getSeriesStudent(1);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('QuestionListController', QuestionListController);\r\n\r\n    /** @ngInject */\r\n    function QuestionListController($http, CommonInfo, $state) {\r\n        var vm = this;\r\n        var questionPaper;\r\n        var perPage = 40;\r\n\r\n        vm.questions = [];\r\n        vm.currentPage = 1;\r\n        vm.questionCount;\r\n        vm.lastPage;\r\n\r\n        vm.getAllQuestions = getAllQuestions;\r\n        // vm.getQuestionById = getQuestionById;\r\n        // vm.updateQuestion = updateQuestion;\r\n\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            questionPaper = CommonInfo.getInfo('selectedQuestionPaper');\r\n            if(questionPaper && questionPaper.id){\r\n                getAllQuestions(1);\r\n            }\r\n        }\r\n\r\n        function getAllQuestions(pageNo) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/question/byQPId', { page: pageNo, perPage: perPage, questionPaperId: questionPaper.id }).then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.currentPage = pageNo\r\n                    vm.questions = response.data.questions;\r\n                    vm.questionCount = response.data.recordCount;\r\n                    vm.lastPage = Math.ceil(vm.questionCount / perPage) || 1;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getQuestionById(questionId) {\r\n            if (questionId) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question/byId', { 'questionId': questionId }).then(function(response) {\r\n                    if (response && response.data && response.data.question) {\r\n                        vm.question = response.data.question;\r\n                        editQuestion('edit', vm.question);\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function editQuestion(mode, question) {\r\n            vm.objMode = mode;\r\n            vm.question = question || {};\r\n            vm.question.correctAnswer = vm.question.correctAnswer || '';\r\n            if (!vm.question.answers) {\r\n                vm.question.answers = getNewAnswerSet();\r\n            }\r\n            if (!vm.question.childQuestions) {\r\n                vm.question.childQuestions = [{ correctAnswer: '', question: '', isDeleted: 0, answers: getNewAnswerSet() }];\r\n            }\r\n            if (mode == 'edit') {\r\n                $state.go('main.test.editQuestion');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.test.createQuestion');\r\n            }\r\n        }\r\n\r\n        function addChildQuestion() {\r\n            vm.question.childQuestions.push({ correctAnswer: '', question: '', isDeleted: 0, answers: getNewAnswerSet() });\r\n        }\r\n\r\n        function getNewAnswerSet() {\r\n            var answers = [];\r\n            for (var i = 0; i < 4; i++)\r\n                answers.push({ answerText: '', isDeleted: 0 });\r\n            return answers;\r\n        }\r\n\r\n        function updateQuestion(addNew) {\r\n            if (vm.question) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question', vm.question).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Question added successfully');\r\n                        if (!addNew) {\r\n                            $state.go('main.test.home');\r\n                            getAllQuestions();\r\n                        } else {\r\n                            vm.question = {\r\n                                answers: getNewAnswerSet(),\r\n                                childQuestions: [{ question: '', isDeleted: 0, answers: getNewAnswerSet() }]\r\n                            };\r\n                        }\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function deleteQuestion(questionId) {\r\n            if (confirm('Are you sure, you want to delete question')) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/question/delete', { 'questionId': questionId }).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Question deleted successfully');\r\n                        getAllQuestions();\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('ExamListController', ExamListController);\r\n\r\n    /** @ngInject */\r\n    function ExamListController($http, CommonInfo, $state, _) {\r\n        var vm = this;\r\n\r\n        vm.startExam = startExam;\r\n        vm.showAnswers = showAnswers;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            CommonInfo.setInfo('exam', '');\r\n            vm.user = CommonInfo.getInfo('user');\r\n            vm.testSeries = CommonInfo.getInfo('testSeries');\r\n            getAllExams();\r\n        }\r\n\r\n        function getAllExams() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/all', { 'userId': vm.user.id, 'testSeriesId': vm.testSeries.id }).then(function(response) {\r\n                if (response && response.data) {\r\n                    _.forEach(response.data.tests, function(value) {\r\n                        value.durationInHrs = moment.duration(value.duration, 'seconds').format(\"HH:mm:ss\");\r\n                        value.isUpcoming = moment().isBefore(value.startDate);\r\n                        value.attachment = value.attachment ? value.attachment.split(',') : [];\r\n                    });\r\n                    vm.exams = response.data.tests;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function startExam(test) {\r\n            if (!test.status || test.status == 'pending') {\r\n                CommonInfo.setInfo('exam', test);\r\n                $state.go('main.exam');\r\n            }\r\n        }\r\n\r\n        function showAnswers(test) {\r\n            CommonInfo.setInfo('testAnswer', { userId: vm.user.id, testId: test.id });\r\n            $state.go('main.examAnswers');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('ExamController', ExamController)\r\n        .directive('instructionBoard', instructionBoard)\r\n        .directive('questionArea', questionArea)\r\n        .directive('navigationArea', navigationArea);\r\n\r\n\r\n    /** @ngInject */\r\n    function instructionBoard(resize, $window) {\r\n        return {\r\n            restrict: 'A',\r\n\r\n            link: function(scope, elem, attrs) {\r\n\r\n                resize(scope).call(function() {\r\n                    elem.css('height', $window.innerHeight - 220 + 'px');\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function questionArea(resize, $window) {\r\n        return {\r\n            restrict: 'A',\r\n\r\n            link: function(scope, elem, attrs) {\r\n\r\n                resize(scope).call(function() {\r\n                    elem.css('height', $window.innerHeight - 131 + 'px');\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function navigationArea(resize, $window) {\r\n        return {\r\n            restrict: 'A',\r\n\r\n            link: function(scope, elem, attrs) {\r\n\r\n                resize(scope).call(function() {\r\n                    elem.css('height', $window.innerHeight - 220 + 'px');\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ExamController($http, CommonInfo, $state, $scope, growl, $interval, $window) {\r\n        var vm = this;\r\n        var userTime;\r\n        var submitAttempt = 0;\r\n        var userInfoLocalStorage;\r\n        var localSubmit, serverSubmit;\r\n        var isInProcess = false;\r\n\r\n        vm.isExamStarted = false;\r\n        vm.isExamEnded = false;\r\n        vm.userCurrentQuestion = [];\r\n        vm.timer = 0;\r\n        vm.selectedLang = 0;\r\n        vm.showLangChoice = 0;\r\n\r\n        vm.startExam = startExam;\r\n        vm.showQuestion = showQuestion;\r\n        vm.submitExam = submitExam;\r\n        vm.saveLocal = saveLocal;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.exam = CommonInfo.getInfo('exam');\r\n            vm.user = CommonInfo.getInfo('user');\r\n            if (vm.exam && vm.user) {\r\n                vm.isPreview = vm.exam.isPreview ? true : false;\r\n                vm.timer = vm.exam.duration;\r\n                getExamQuestions();\r\n            }\r\n        }\r\n\r\n        $scope.$on('timer-tick', function(event, args) {\r\n            userTime = args.millis;\r\n        });\r\n\r\n        $scope.$on('timer-stopped', function(event, data) {\r\n            if (!isInProcess) {\r\n                vm.isExamEnded = true;\r\n                alert('Your exam time is over, press ok to submit exam');\r\n                submitExam(true);\r\n            }\r\n        });\r\n\r\n        function getExamQuestions() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/exam/byId', { testId: vm.exam.id }).then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.exam.questions = response.data.questions;\r\n                    userInfoLocalStorage = CommonInfo.getInfo(vm.user.id + '_' + vm.exam.id);\r\n                    getUserTestInfo();\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getUserTestInfo() {\r\n            var data = {\r\n                userId: vm.user.id,\r\n                testId: vm.exam.id\r\n            };\r\n            if (!vm.isPreview) {\r\n                $http.post(CommonInfo.getAppUrl() + '/api/exam/userInfo', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        if (compareTimestamp()) {\r\n                            vm.exam.userInfo = userInfoLocalStorage;\r\n                        } else {\r\n                            vm.exam.userInfo = response.data.userTestInfo;\r\n                        }\r\n                        if (vm.exam && vm.exam.userInfo && vm.exam.userInfo.status == 'pending' && vm.exam.userInfo.timeRemaining == 0) {\r\n                            alert('Your exam time is over, press ok to submit exam')\r\n                            submitExam(true);\r\n                        } else {\r\n                            vm.timer = vm.exam.userInfo.timeRemaining || vm.timer;\r\n                            vm.showLangChoice = vm.exam.questions[0].questionText ? 1 : 0;\r\n                            if(vm.showLangChoice)\r\n                                vm.selectedLang = vm.exam.userInfo.selectedLang ? vm.exam.userInfo.selectedLang : 0;\r\n                            else\r\n                                vm.selectedLang = 1;\r\n                            _.forEach(vm.exam.questions, function(value, key) {\r\n                                vm.userCurrentQuestion[key] = _.find(vm.exam.userInfo.answers, { 'questionId': value.id }) || {\r\n                                    questionId: value.id,\r\n                                    answer: '',\r\n                                    isMarked: false\r\n                                };\r\n                            });\r\n                        }\r\n                    } else {\r\n                        growl.info('Some error occured, try after some time');\r\n                        $state.go('main.examsList');\r\n                    }\r\n                }, function(response) {\r\n                    growl.info('Some error occured, try after some time');\r\n                    $state.go('main.examsList');\r\n                });\r\n            } else {\r\n                _.forEach(vm.exam.questions, function(value, key) {\r\n                    vm.userCurrentQuestion[key] = {\r\n                        questionId: value.id,\r\n                        answer: '',\r\n                        isMarked: false\r\n                    };\r\n                });\r\n            }\r\n        }\r\n\r\n        function compareTimestamp() {\r\n            if (userInfoLocalStorage && userInfoLocalStorage.timestamp) {\r\n                if (vm.exam.userInfo && vm.exam.userInfo.timestamp) {\r\n                    if (moment(vm.exam.userInfo.timestamp).isBefore(userInfoLocalStorage.timestamp))\r\n                        return true;\r\n                    else\r\n                        return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function startExam() {\r\n            if (vm.exam && vm.exam.questions && vm.exam.questions.length > 0) {\r\n                vm.isExamStarted = true;\r\n                showQuestion(0);\r\n                localSubmit = $interval(function() { saveLocal() }, 10000);\r\n                serverSubmit = $interval(function() { submitExam(false, 'pending') }, 60000);\r\n                $scope.$on('$stateChangeStart',\r\n                    function(event, toState, toParams, fromState, fromParams) {\r\n                        if (vm.isExamStarted && !vm.isExamEnded)\r\n                            event.preventDefault();\r\n                    });\r\n                stopNavigation();\r\n            }\r\n        }\r\n\r\n        function stopNavigation() {\r\n            // var myEvent = $window.attachEvent || $window.addEventListener,\r\n            //     chkevent = $window.attachEvent ? 'onbeforeunload' : 'beforeunload';\r\n\r\n            // myEvent(chkevent, function(e) {\r\n            //     submitExam(false, 'pending');\r\n            //     var confirmationMessage = ' ';\r\n            //     (e || $window.event).returnValue = \"Are you sure that you'd like to close the browser?\";\r\n            //     return confirmationMessage;\r\n            // });\r\n\r\n            // $scope.$on('$locationChangeStart', function(event) {\r\n            //     submitExam(false, 'pending');\r\n            //     var answer = confirm(\"Are you sure you want to leave this page?\")\r\n            //     if (!answer) {\r\n            //         event.preventDefault();\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        function showQuestion(questionNo) {\r\n            vm.currentIndex = questionNo;\r\n            vm.currentQuestionIndex = questionNo + 1;\r\n            vm.currentQuestion = vm.exam.questions[questionNo];\r\n            saveLocal();\r\n        }\r\n\r\n        function saveLocal() {\r\n            //submitExam(false, 'pending');\r\n            var data = {\r\n                userId: vm.user.id,\r\n                testId: vm.exam.id,\r\n                timeRemaining: userTime / 1000,\r\n                answers: vm.userCurrentQuestion,\r\n                status: 'pending',\r\n                timestamp: moment(),\r\n                selectedLang: vm.selectedLang\r\n            };\r\n            CommonInfo.setInfo(vm.user.id + '_' + vm.exam.id, data);\r\n        }\r\n\r\n        function submitExam(isForced, status) {\r\n            status = status || 'completed';\r\n            var data = {\r\n                userId: vm.user.id,\r\n                testId: vm.exam.id,\r\n                timeRemaining: userTime / 1000,\r\n                answers: vm.userCurrentQuestion,\r\n                status: status,\r\n                timestamp: moment(),\r\n                selectedLang: vm.selectedLang\r\n            };\r\n            if (!vm.isPreview && !isInProcess) {\r\n                if (status == 'completed'){\r\n                    isInProcess = true;\r\n                    vm.isExamEnded = true;\r\n                    $interval.cancel(localSubmit);\r\n                    $interval.cancel(serverSubmit);\r\n                    localSubmit = serverSubmit = undefined;\r\n                }\r\n                if (isForced || status == 'pending' || confirm('Are you sure, you want to submit(final) your answers')) {\r\n                    $http.post(CommonInfo.getAppUrl() + '/api/exam/submit', data).then(function(response) {\r\n                        if (response && response.data) {\r\n                            if (status == 'completed') {\r\n                                growl.success('Your answers saved successfully');\r\n                                $state.go('main.examsList');\r\n                            } else {\r\n                                if (status != 'pending') {\r\n                                    if (submitAttempt <= 3) {\r\n                                        submitAttempt++;\r\n                                        submitExam(true);\r\n                                    } else {\r\n                                        growl.info('Unable to submit due to some server error, please try after some time');\r\n                                        $state.go('main.examsList');\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }, function(response) {\r\n                        if (status != 'pending') {\r\n                            if (submitAttempt <= 3) {\r\n                                submitAttempt++;\r\n                                submitExam(true);\r\n                            } else {\r\n                                growl.info('Unable to submit due to some server error, please try after some time');\r\n                                $state.go('main.examsList');\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('CourseStudentController', CourseStudentController);\r\n\r\n    /** @ngInject */\r\n    function CourseStudentController($http, CommonInfo, $state, growl) {\r\n        var vm = this;\r\n        var perPage = 40;\r\n        var course;\r\n\r\n        vm.currentCourseUserPage = 1;\r\n        vm.sarchText = '';\r\n        vm.courseUsers = [];\r\n        vm.courseUserCount = 0;\r\n        vm.lastCoursUserPage = 0;\r\n\r\n        vm.searchStudent = searchStudent;\r\n        vm.getCourseUsers = getCourseUsers;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            course = CommonInfo.getInfo('CourseUser');\r\n            if (course && course.id) {\r\n                getCourseUsers(1);\r\n            }\r\n        }\r\n\r\n        function getCourseUsers(pageNo) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/course/userList', { 'courseId': course.id, 'searchText': vm.searchText, 'page': pageNo }).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.courseUsers = response.data.courseUsers;\r\n                    vm.courseUserCount = response.data.recordCount;\r\n                    vm.lastCoursUserPage = Math.ceil(vm.courseUserCount / perPage) || 1;\r\n                    vm.currentCourseUserPage = pageNo;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function searchStudent() {\r\n            getCourseUsers(1);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('MainController', MainController);\r\n        //.filter('truncate', truncate);\r\n\r\n    /** @ngInject */\r\n    // function truncate(_) {\r\n    //     return function(text) {\r\n    //         if(text)\r\n    //             return _.trunc(text, { 'length': 213, 'separator': ' ' });\r\n    //         else\r\n    //             return \"\";\r\n    //     }\r\n    // }\r\n\r\n    /** @ngInject */\r\n    function MainController($http, CommonInfo, Upload, $state, credentials, $uibModal, _, growl, $scope) {\r\n        var vm = this;\r\n\r\n        vm.userInfo; // hold user info[both]\r\n        vm.isCollapsed = true; // for the drop down main menu[both]\r\n        vm.lesson = {}; // current lesson on (my, edit, add) lesson page[both]\r\n        vm.config = {}; // user configuration for showing tabs[both]\r\n        vm.courses = []; // list of (Library, my, all) courses[both]\r\n        vm.units = []; // list of units, lessons to show on my lessons page[student]\r\n        //for admin side only\r\n        vm.categoryPopup = false;\r\n        vm.categories = []; // list of categories in create/edit course page\r\n        vm.lessons = []; // list of all lessons in admin role\r\n        vm.lessonComments = []; //list of comments by lesson id\r\n        vm.users = []; // list of (instructor, student) users in admin role\r\n        vm.user = {};\r\n        vm.course = { // object used while (create/edit) course\r\n            units: [],\r\n            instructors: []\r\n        };\r\n        vm.objMode; // hold the current mode for entity(edit/insert)\r\n        vm.dateOptions = {\r\n            formatYear: 'yy',\r\n            startingDay: 1\r\n        };\r\n        vm.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\r\n        vm.format = 'dd-MMMM-yyyy';\r\n        vm.toolBar = [\r\n            ['h1', 'h2', 'h3', 'bold', 'italics', 'underline'],\r\n            ['ol', 'ul'],\r\n            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\r\n            ['html', 'insertImage', 'insertLink', 'insertVideo']\r\n        ];\r\n        vm.isUserSelected = false;\r\n        vm.selectedUserGrid = [];\r\n        vm.newCategory = {};\r\n\r\n        vm.courseLibary = courseLibary;\r\n        vm.subscribeCourse = subscribeCourse;\r\n        vm.getMyCourses = getMyCourses;\r\n        vm.selectCourse = selectCourse;\r\n        vm.searchCourse = searchCourse;\r\n        vm.selectLesson = selectLesson;\r\n        vm.commentOnLesson = commentOnLesson;\r\n        vm.updateProfile = updateProfile;\r\n        vm.showCourseDemo = showCourseDemo;\r\n        vm.showCourseInfo = showCourseInfo;\r\n        vm.downloadFile = downloadFile;\r\n        vm.signout = signout;\r\n        //for admin side\r\n        vm.getAllCourses = getAllCourses;\r\n        vm.addCategory = addCategory;\r\n        vm.getCourseById = getCourseById;\r\n        vm.editCourse = editCourse;\r\n        vm.addUnitToCourse = addUnitToCourse;\r\n        vm.addUserToCourse = addUserToCourse;\r\n        vm.updateCourse = updateCourse;\r\n        vm.deleteCourse = deleteCourse;\r\n        vm.publishCourse = publishCourse;\r\n        vm.showCourseStudent = showCourseStudent;\r\n        vm.getAllLessons = getAllLessons;\r\n        vm.getLessonById = getLessonById;\r\n        vm.editLesson = editLesson;\r\n        vm.changeCourse = changeCourse;\r\n        vm.addFilesToLesson = addFilesToLesson;\r\n        vm.updateLesson = updateLesson;\r\n        vm.deleteLesson = deleteLesson;\r\n        vm.getLessonComments = getLessonComments;\r\n        vm.getUsers = getUsers;\r\n        vm.userSelection = userSelection;\r\n        vm.selectedAllStudents = selectedAllStudents;\r\n        vm.addStudentToCourse = addStudentToCourse;\r\n        vm.addStudentToTestSeries = addStudentToTestSeries;\r\n        vm.approveUser = approveUser;\r\n        vm.getUserById = getUserById;\r\n        vm.editUser = editUser;\r\n        vm.getAllBatches = getAllBatches;\r\n        vm.editBatch = editBatch;\r\n        vm.addBatch = addBatch;\r\n\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n            vm.config = credentials.getCredentials();\r\n            vm.userInfo = CommonInfo.getInfo('user');\r\n            if (vm.userInfo && vm.userInfo.profileType == 'student') {\r\n                if ($state.is('main.libary')) {\r\n                    courseLibary();\r\n                } else if ($state.is('main.myCourses')) {\r\n                    getMyCourses();\r\n                } else if ($state.is('main.myLessons')) {\r\n                    var course = CommonInfo.getInfo('course');\r\n                    getUnits(course.id);\r\n                } else if ($state.is('main.profile')) {\r\n                    var user = angular.copy(vm.userInfo);\r\n                    if (user && user.id)\r\n                        editUser('update', user);\r\n                }\r\n            } else if (vm.userInfo && vm.userInfo.profileType == 'admin') {\r\n                if ($state.is('main.courses')) {\r\n                    getAllCourses();\r\n                    showCategoryModal();\r\n                } else if ($state.is('main.lessons')) {\r\n                    getAllLessons();\r\n                } else if ($state.is('main.instructors')) {\r\n                    vm.userType = 'instructor';\r\n                    getUsers('instructor');\r\n                } else if ($state.is('main.students')) {\r\n                    vm.userType = 'student';\r\n                    getUsers('student');\r\n                } else if ($state.is('main.createCourse')) {\r\n                    editCourse('insert');\r\n                } else if ($state.is('main.editCourse')) {\r\n                    var course = CommonInfo.getInfo('course');\r\n                    if (course && course.id)\r\n                        editCourse('edit', course);\r\n                } else if ($state.is('main.createLesson')) {\r\n                    editLesson('insert');\r\n                } else if ($state.is('main.editLesson')) {\r\n                    var lesson = CommonInfo.getInfo('lesson');\r\n                    if (lesson && lesson.id)\r\n                        editLesson('edit', lesson);\r\n                } else if ($state.is('main.createUser')) {\r\n                    editUser('insert');\r\n                } else if ($state.is('main.editUser')) {\r\n                    var user = CommonInfo.getInfo('editUser');\r\n                    if (user && user.id)\r\n                        editUser('edit', user);\r\n                } else if ($state.is('main.profile')) {\r\n                    var user = angular.copy(vm.userInfo);\r\n                    if (user && user.id)\r\n                        editUser('update', user);\r\n                } else if ($state.is('main.comments')) {\r\n                    var lesson = CommonInfo.getInfo('lesson');\r\n                    if (lesson && lesson.id)\r\n                        showLessonComments(lesson.id);\r\n                }\r\n            } else {\r\n                $state.go('login');\r\n            }\r\n        }\r\n\r\n        function courseLibary() {\r\n            var data = { userId: vm.userInfo.id };\r\n            $http.post(CommonInfo.getAppUrl() + '/api/course/courseLibary', data).then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.courses = response.data.courses;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getAllCourses() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/course/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.courses = response.data.courses;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function searchCourse() {\r\n            if (vm.searchText) {\r\n                var data = {\r\n                    name: vm.searchText\r\n                }\r\n                $http.post(CommonInfo.getAppUrl() + '/api/course/search', data).then(function(response) {\r\n                    if (response && response.data) {\r\n                        $state.go('main.libary');\r\n                        vm.courses = response.data.courses;\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function subscribeCourse(course) {\r\n            if (course) {\r\n                var data = {\r\n                    phone: vm.userInfo.phone,\r\n                    fullName: vm.userInfo.fullName,\r\n                    email: vm.userInfo.email,\r\n                    purpose: 'Payment stud: ' + vm.userInfo.id + 'cour: ' + course.id,\r\n                    amt: course.subscriptionFee,\r\n                    userId: vm.userInfo.id,\r\n                    courseId: course.id\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/course/subscribe', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        if (response.data.url) {\r\n                            window.open(response.data.url + '?embed=form');\r\n                        } else if (response.data.code) {\r\n                            growl.success('Course subscribed successfully');\r\n                        }\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function getMyCourses() {\r\n            var data = {\r\n                userId: vm.userInfo.id\r\n            };\r\n            $http.post(CommonInfo.getAppUrl() + '/api/course/subscribed', data).then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.courses = response.data.courses;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function selectCourse(course) {\r\n            if (course) {\r\n                CommonInfo.setInfo('course', course);\r\n                getUnits(course.id, true);\r\n            }\r\n        }\r\n\r\n        function getUnits(courseId, navigateToPage) {\r\n            if (courseId) {\r\n                var data = {\r\n                    courseId: courseId\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/unit/byCourse', data).then(function(response) {\r\n                    if (response && response.data && response.data.units.length > 0) {\r\n                        vm.units = response.data.units;\r\n                        selectLesson(vm.units[0].lessons[0]);\r\n                        if (navigateToPage)\r\n                            $state.go('main.myLessons');\r\n                    } else {\r\n                        growl.info('No units present in this course');\r\n                    }\r\n                }, function(response) {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        function selectLesson(lesson) {\r\n            vm.lesson = lesson\r\n            vm.lesson.comments = vm.lesson.comments || [];\r\n            _.forEach(vm.lesson.files, function(value) {\r\n                value.filePath = _.replace(value.filePath, '/public', '');\r\n            });\r\n            if (lesson.video && lesson.video != 'null') {\r\n                vm.lesson.options = {\r\n                    file: lesson.video,\r\n                    image: lesson.poster,\r\n                    type: 'hls',\r\n                    androidhls: 'true',\r\n                    width: '100%',\r\n                    player: 'html5',\r\n                    aspectratio: '16:9'\r\n                }\r\n            } else {\r\n                vm.lesson.options = null;\r\n            }\r\n        }\r\n\r\n        function getAllLessons() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/lesson/all').then(function(response) {\r\n                if (response && response.data) {\r\n                    vm.lessons = response.data.lessons;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function commentOnLesson() {\r\n            var data = {\r\n                lessonId: vm.lesson.id,\r\n                comment: vm.commentMsg,\r\n                userId: vm.userInfo.id\r\n            };\r\n            var newComment = {\r\n                comments: vm.commentMsg,\r\n                timestamp: 'Just now',\r\n                commentedBy: {\r\n                    profilePhoto: vm.userInfo.profilePhoto,\r\n                    fullName: vm.userInfo.fullName\r\n                }\r\n            };\r\n            if ($state.is('main.comments')) {\r\n                vm.lessonComments.push(newComment);\r\n            } else {\r\n                vm.lesson.comments.push(newComment);\r\n            }\r\n            $http.post(CommonInfo.getAppUrl() + '/api/lesson/addComment', data).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    growl.success('Comment send');\r\n                    vm.commentMsg = \"\";\r\n                }\r\n            }, function(response) {\r\n\r\n            });\r\n        }\r\n\r\n        function getCourseById(courseId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/course/byId', { 'courseId': courseId }).then(function(response) {\r\n                if (response && response.data && response.data.course) {\r\n                    CommonInfo.setInfo('course', response.data.course);\r\n                    editCourse('edit', response.data.course);\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function editCourse(mode, course) {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/category/all').then(function(response) {\r\n                if (response && response.data && response.data.categories) {\r\n                    vm.categories = response.data.categories;\r\n                }\r\n            }, function(response) {});\r\n            $http.post(CommonInfo.getAppUrl() + '/api/user/name', { 'type': 'instructor' }).then(function(response) {\r\n                if (response && response.data && response.data.users) {\r\n                    vm.users = response.data.users;\r\n                }\r\n            }, function(response) {});\r\n            vm.objMode = mode;\r\n            if (mode == 'edit') {\r\n                $state.go('main.editCourse');\r\n                vm.course = course;\r\n                vm.course.validTo = vm.course.validTo ? new Date(vm.course.validTo) : \"\";\r\n            } else if (mode == 'insert') {\r\n                vm.course = {\r\n                    units: [],\r\n                    instructors: [],\r\n                    isForever: false,\r\n                    isSendMail: false\r\n                };\r\n                $state.go('main.createCourse');\r\n            }\r\n        }\r\n\r\n        function addUnitToCourse() {\r\n            var values = _.compact(vm.course.courseUnit.split(','));\r\n            _.forEach(values, function(value, key) {\r\n                vm.course.units.push({ 'name': value });\r\n            });\r\n            vm.course.courseUnit = '';\r\n        }\r\n\r\n        function addUserToCourse() {\r\n            var selectedInstructor = {\r\n                fullName: vm.course.courseUser.fullName,\r\n                userId: vm.course.courseUser.id\r\n            };\r\n            if (!_.find(vm.course.instructors, { 'userId': vm.course.courseUser.id }))\r\n                vm.course.instructors.push(selectedInstructor);\r\n            vm.course.courseUser = '';\r\n        }\r\n\r\n        function updateCourse(files) {\r\n            Upload.upload({\r\n                url: CommonInfo.getAppUrl() + '/api/course',\r\n                data: { file: files, course: vm.course },\r\n                method: 'POST'\r\n            }).then(function(response) {\r\n                response = response.data;\r\n                if (response && !response.Error) {\r\n                    growl.success('Course Updated successfully');\r\n                    $state.go('main.courses');\r\n                    getAllCourses();\r\n                }\r\n            }, function(resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            });\r\n        }\r\n\r\n        function deleteCourse(course) {\r\n            if (course && confirm('Are you sure you want to delete ' + course.name)) {\r\n                var data = {\r\n                    course: course\r\n                };\r\n                data.course.isDeleted = true;\r\n                $http.post(CommonInfo.getAppUrl() + '/api/course', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Course deleted successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function publishCourse(course) {\r\n            if (course) {\r\n                var status = course.isPublished ? \"unpublished\" : \"publish\"\r\n                if (course && confirm('Are you sure you want to ' + status + ' ' + course.name)) {\r\n                    var data = {\r\n                        course: course\r\n                    };\r\n                    data.course.isPublished = !data.course.isPublished;\r\n                    $http.post(CommonInfo.getAppUrl() + '/api/course', data).then(function(response) {\r\n                        if (response && response.data && !response.data.Error) {\r\n                            growl.success('Course ' + status + ' successfully');\r\n                        }\r\n                    }, function(response) {});\r\n                }\r\n            }\r\n        }\r\n\r\n        function showCourseStudent(course) {\r\n            if (course && course.id) {\r\n                CommonInfo.setInfo('CourseUser', course);\r\n                $state.go('main.courseStudent');\r\n            }\r\n        }\r\n\r\n        function getLessonById(lessonId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/lesson/byId', { 'lessonId': lessonId }).then(function(response) {\r\n                if (response && response.data && response.data.lesson) {\r\n                    CommonInfo.setInfo('lesson', response.data.lesson);\r\n                    editLesson('edit', response.data.lesson);\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function editLesson(mode, lesson) {\r\n            vm.objMode = mode;\r\n            vm.lesson = lesson || { courses: [] };\r\n            vm.lesson.newFiles = [];\r\n            $http.get(CommonInfo.getAppUrl() + '/api/course/courseAndUnits').then(function(response) {\r\n                if (response && response.data && response.data.courses) {\r\n                    vm.courseUnitList = response.data.courses;\r\n                    changeCourse();\r\n                }\r\n            }, function(response) {});\r\n\r\n            if (mode == 'edit') {\r\n                $state.go('main.editLesson');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.createLesson');\r\n            }\r\n        }\r\n\r\n        function changeCourse() {\r\n            if (vm.lesson && vm.lesson.courses && vm.lesson.courses.length > 0) {\r\n                var course = _.find(vm.courseUnitList, { 'id': vm.lesson.courses[0].courseId });\r\n                if (course) {\r\n                    vm.lesson.unitList = course.units;\r\n                    vm.lesson.courses[0].courseName = course.name;\r\n                }\r\n            }\r\n        }\r\n\r\n        function addFilesToLesson() {\r\n            if (vm.lesson.file) {\r\n                vm.lesson.newFiles = _.uniqBy(vm.lesson.newFiles.concat(vm.lesson.file), 'name');\r\n            }\r\n        }\r\n\r\n        function updateLesson(files) {\r\n            Upload.upload({\r\n                url: CommonInfo.getAppUrl() + '/api/lesson',\r\n                data: { file: files, lesson: vm.lesson },\r\n                method: 'POST'\r\n            }).then(function(response) {\r\n                response = response.data;\r\n                if (response && !response.Error) {\r\n                    growl.success('Lesson Updated successfully');\r\n                    $state.go('main.lessons');\r\n                    getAllLessons();\r\n                }\r\n            }, function(resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            });\r\n        }\r\n\r\n        function deleteLesson(lesson) {\r\n            if (lesson && confirm('Are you sure you want to delete ' + lesson.name)) {\r\n                var data = {\r\n                    lesson: lesson\r\n                };\r\n                data.lesson.isDeleted = 'true'\r\n                $http.post(CommonInfo.getAppUrl() + '/api/lesson', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Lesson deleted successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function getLessonComments(lesson) {\r\n            CommonInfo.setInfo('lesson', lesson);\r\n            showLessonComments(lesson.id);\r\n        }\r\n\r\n        function showLessonComments(lessonId) {\r\n            if (lessonId) {\r\n                vm.lesson.id = lessonId\r\n                var data = {\r\n                    lessonId: lessonId\r\n                }\r\n                $http.post(CommonInfo.getAppUrl() + '/api/lesson/allComment', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        vm.lessonComments = response.data.comments;\r\n                        if (vm.lessonComments && vm.lessonComments.length > 0)\r\n                            $state.go('main.comments');\r\n                        else\r\n                            growl.info('No comments found.')\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function getUsers(type, pageNo) {\r\n            unSelectAll();\r\n            vm.usersRecordCount = 0;\r\n            vm.userType = type;\r\n            var data = {\r\n                type: type,\r\n                searchText: vm.searchText\r\n            };\r\n            if (pageNo) {\r\n                data.page = pageNo;\r\n                data.perPage = 40;\r\n                vm.usersCurrentPage = pageNo;\r\n            } else {\r\n                vm.usersCurrentPage = 1;\r\n            }\r\n            $http.post(CommonInfo.getAppUrl() + '/api/user/byType', data).then(function(response) {\r\n                if (response && response.data && response.data.users) {\r\n                    vm.users = response.data.users;\r\n                    vm.usersRecordCount = response.data.recordCount;\r\n                    vm.usersLastPage = Math.ceil(vm.usersRecordCount / 40) || 1;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function userSelection() {\r\n            vm.selectedUserGrid = _.map(_.filter(vm.users, { 'isSelected': true }), 'id');\r\n            if (vm.selectedUserGrid && vm.selectedUserGrid.length > 0) {\r\n                vm.isUserSelected = true;\r\n                if (!vm.coursesNameList)\r\n                    getCoursesName();\r\n                if(!vm.testSeriesList)\r\n                    getTestSeriesList();\r\n            } else {\r\n                vm.isUserSelected = false;\r\n            }\r\n        }\r\n\r\n        function getCoursesName() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/course/nameList', {}).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.coursesNameList = response.data.courses;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getTestSeriesList() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/testSeries/nameList').then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.testSeriesList = response.data.testSeries;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function selectedAllStudents() {\r\n            if (vm.users && vm.users.length > 0) {\r\n                _.forEach(vm.users, function(value) {\r\n                    value.isSelected = vm.isAllUserSelected;\r\n                });\r\n                userSelection();\r\n            }\r\n        }\r\n\r\n        function unSelectAll(){\r\n            if (vm.users && vm.users.length > 0) {\r\n                _.forEach(vm.users, function(value) {\r\n                    value.isSelected = false;\r\n                });\r\n                userSelection();\r\n            }\r\n        }\r\n\r\n        function addStudentToCourse(courseId) {\r\n            if (vm.selectedUserGrid && vm.selectedUserGrid.length > 0 && courseId) {\r\n                var data = {\r\n                    courseId: courseId,\r\n                    users: vm.selectedUserGrid\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/course/subscribeManual', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Student added to course successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function addStudentToTestSeries(testSeriesId) {\r\n            if (vm.selectedUserGrid && vm.selectedUserGrid.length > 0 && testSeriesId) {\r\n                var data = {\r\n                    testSeriesId: testSeriesId,\r\n                    users: vm.selectedUserGrid\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/testSeries/addUsers', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Student added to test series successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function approveUser(user) {\r\n            var userInfo = angular.copy(user);\r\n            userInfo.status = 'active';\r\n            $http.put(CommonInfo.getAppUrl() + '/api/user', userInfo).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    user.status = 'active';\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function getUserById(userId) {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/user/byId', { userId: userId }).then(function(response) {\r\n                if (response && response.data && response.data.user) {\r\n                    CommonInfo.setInfo('editUser', response.data.user);\r\n                    editUser('edit', response.data.user);\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function editUser(mode, user) {\r\n            vm.user = angular.copy(user) || {};\r\n            vm.objMode = mode;\r\n            if (mode == 'edit') {\r\n                $state.go('main.editUser');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.createUser');\r\n            } else if (mode == 'update') {\r\n                $state.go('main.profile');\r\n            }\r\n        }\r\n\r\n        function updateProfile(files) {\r\n            if (vm.user) {\r\n                vm.user.profileType = vm.user.profileType || vm.userType;\r\n                var sendMail = vm.objMode == 'insert' ? true : false;\r\n                Upload.upload({\r\n                    url: CommonInfo.getAppUrl() + '/api/user',\r\n                    data: { file: files, user: vm.user, sendMail: sendMail },\r\n                    method: 'PUT'\r\n                }).then(function(response) {\r\n                    response = response.data;\r\n                    if (response && !response.Error) {\r\n                        growl.success('Profile updated successfully');\r\n                        if (vm.objMode == 'update') {\r\n                            vm.userInfo = response.user;\r\n                            CommonInfo.setInfo('user', vm.userInfo);\r\n                        } else {\r\n                            getUsers(vm.userType);\r\n                            if (vm.userType == 'student')\r\n                                $state.go('main.students');\r\n                            else if (vm.userType == 'instructor')\r\n                                $state.go('main.instructors');\r\n                        }\r\n                    }\r\n                }, function(resp) {\r\n                    console.log('Error status: ' + resp.status);\r\n                });\r\n            }\r\n        }\r\n\r\n        function deleteUser(user) {\r\n            if (course && confirm('Are you sure you want to delete ' + user.name)) {\r\n                var data = {\r\n                    user: user\r\n                };\r\n                data.course.isDeleted = true;\r\n                $http.post(CommonInfo.getAppUrl() + '/api/user', data).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Course deleted successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function getAllBatches() {\r\n            $http.get(CommonInfo.getAppUrl() + '/api/batch/all').then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.batches = response.data.batches;\r\n                }\r\n            }, function(response) {});\r\n        }\r\n\r\n        function editBatch(mode, batch) {\r\n            vm.batch = batch || {};\r\n            vm.objMode = mode;\r\n            if (mode == 'edit') {\r\n                $state.go('main.editBatch');\r\n            } else if (mode == 'insert') {\r\n                $state.go('main.createBatch');\r\n            }\r\n        }\r\n\r\n        function addBatch(){\r\n            if(vm.batch){\r\n                vm.batch.createdBy = vm.userInfo.id;\r\n                $http.post(CommonInfo.getAppUrl() + '/api/batch', vm.batch).then(function(response) {\r\n                    if (response && response.data && !response.data.Error) {\r\n                        growl.success('Batch deleted successfully');\r\n                    }\r\n                }, function(response) {});\r\n            }\r\n        }\r\n\r\n        function signout() {\r\n            CommonInfo.reset();\r\n            $state.go('login');\r\n        }\r\n\r\n        function showCourseDemo(course) {\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'app/partical/showDemo.html',\r\n                size: 'lg',\r\n                controller: function($scope, item) {\r\n                    $scope.options = {\r\n                        // sources: [{\r\n                        //     file: item.demoVideo\r\n                        // },\r\n                        // {\r\n                        //     file: 'https://youtu.be/OOFDxauOYrw'\r\n                        // }],\r\n                        file: item.demoVideo,\r\n                        image: item.demoPoster,\r\n                        type: 'hls',\r\n                        androidhls: 'true',\r\n                        width: '100%',\r\n                        player: 'html5',\r\n                        aspectratio: '16:9'\r\n                    };\r\n                },\r\n                resolve: {\r\n                    item: function() {\r\n                        return course;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function showCourseInfo(courseId, courseName, courseDesc) {\r\n            if (courseId) {\r\n                var data = {\r\n                    courseId: courseId\r\n                };\r\n                $http.post(CommonInfo.getAppUrl() + '/api/unit/byCourse', data).then(function(response) {\r\n                    if (response && response.data && response.data.units && response.data.units.length > 0) {\r\n                        var item = {\r\n                            courseName: courseName,\r\n                            courseDesc: courseDesc,\r\n                            units: response.data.units\r\n                        };\r\n                        var modalInstance = $uibModal.open({\r\n                            animation: true,\r\n                            templateUrl: 'app/partical/showCourseInfo.html',\r\n                            controller: function($scope, item) {\r\n                                $scope.course = item;\r\n                            },\r\n                            resolve: {\r\n                                item: function() {\r\n                                    return item;\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        growl.info('No information for this course yet added');\r\n                    }\r\n                }, function(response) {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        function downloadFile(filePath, fileName) {\r\n            var data = {\r\n                fileName: fileName,\r\n                filePath: filePath,\r\n                userId: vm.userInfo.id\r\n            };\r\n            $http.post(CommonInfo.getAppUrl() + '/api/util/downloadFile', data).then(function(response) {\r\n                console.log(response);\r\n            }, function(response) {});\r\n        }\r\n\r\n        function showCategoryModal() {\r\n            vm.categories = [];\r\n            $http.get(CommonInfo.getAppUrl() + '/api/category/all').then(function(response) {\r\n                if (response && response.data.categories && response.data.categories.length > 0) {\r\n                    vm.categories = response.data.categories;\r\n                }\r\n            });\r\n        }\r\n\r\n        function addCategory() {\r\n            $http.post(CommonInfo.getAppUrl() + '/api/category', vm.newCategory).then(function(response) {\r\n                if (response && response.data && !response.data.Error) {\r\n                    vm.categories.push(vm.newCategory);\r\n                    vm.categoryPopup = false;\r\n                    vm.newCategory = {};\r\n                    growl.success('Category added successfully');\r\n                }\r\n            }, function(response) {});\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('ResetPasswordController', ResetPasswordController)\r\n        .directive('loginArea', loginArea);\r\n\r\n\r\n        /** @ngInject */\r\n    function loginArea($window, resize) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function(scope, elem, attrs) {\r\n\r\n                resize(scope).call(function() {\r\n                    elem.css('height', $window.innerHeight + 'px');\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function ResetPasswordController($http, CommonInfo, $state, growl, $stateParams) {\r\n        var vm = this;\r\n        var token = \"\";\r\n\r\n        vm.user = {\r\n            confirmPassword: '',\r\n            password: ''\r\n        };\r\n\r\n        vm.resetPassword = resetPassword;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            token = $stateParams.token;\r\n        }\r\n\r\n        function resetPassword() {\r\n            if (vm.user.password && token) {\r\n                var data = {\r\n                    password: vm.user.password,\r\n                    token: token\r\n                }\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/reset\", data).then(\r\n                    function(response) {\r\n                        if (response && response.data && !response.data.Error) {\r\n                            growl.info('Password changed successfully');\r\n                            $state.go('login');\r\n                        } else if (response && response.data && response.data.Error) {\r\n                            growl.info(response.data.Message);\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info(response.data.Message);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .controller('LoginController', LoginController)\r\n        .directive('loginArea', loginArea);\r\n\r\n\r\n    //style = \"background-image: url('assets/images/forumias-academy-image.jpg');background-repeat: no-repeat;background-size: cover;\"\r\n    /** @ngInject */\r\n    function loginArea($window, resize) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function(scope, elem, attrs) {\r\n\r\n                resize(scope).call(function() {\r\n                    elem.css('height', $window.innerHeight + 'px');\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /** @ngInject */\r\n    function LoginController($http, $state, CommonInfo, growl, $location, $timeout) {\r\n        var vm = this;\r\n        var codeStr = \"\";\r\n        var otpTimeout;\r\n\r\n        vm.forget = {\r\n            status: false,\r\n            email: ''\r\n        };\r\n        vm.user = {\r\n            userName: '',\r\n            password: ''\r\n        };\r\n        vm.newUser = {\r\n            fullName: '',\r\n            email: '',\r\n            password: '',\r\n            phone: '',\r\n        };\r\n        vm.isOtp = true;\r\n        vm.isOtpSend = false;\r\n        vm.isOtpValid = false;\r\n        vm.activeForm = 0;\r\n        vm.showPage = false\r\n\r\n        vm.login = login;\r\n        vm.signup = signup;\r\n        vm.forgetPassword = forgetPassword;\r\n        vm.requestOtp = requestOtp;\r\n        vm.validateOtp = validateOtp;\r\n        vm.isLoginPage = true;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            var user = CommonInfo.getInfo('user');\r\n            if (user) {\r\n                if (user.profileType == 'student')\r\n                    $state.go('main.libary');\r\n                else if (user.profileType == 'admin')\r\n                    $state.go('main.courses');\r\n            } else {\r\n                vm.showPage = true;\r\n            }\r\n        }\r\n\r\n        function login() {\r\n            if (vm.user.userName && vm.user.password) {\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/login\", vm.user).then(\r\n                    function(response) {\r\n                        if (response && response.data && response.data.result && !response.data.Error) {\r\n                            CommonInfo.setInfo('user', response.data.result);\r\n                            var profileType = response.data.result.profileType;\r\n                            if (profileType == 'student')\r\n                                $state.go('main.libary');\r\n                            else if (profileType == 'admin')\r\n                                $state.go('main.courses');\r\n                        } else if (response && response.data && response.data.Error) {\r\n                            growl.info(response.data.Message);\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info(response.data.Message);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        function signup() {\r\n            if (vm.newUser.email && vm.newUser.phone && vm.newUser.fullName) {\r\n                vm.newUser.profileType = 'student';\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/user\", vm.newUser).then(\r\n                    function(response) {\r\n                        if (response && response.data && !response.data.Error) {\r\n                            growl.success('Signup successfuly');\r\n                            vm.user.userName = vm.newUser.phone;\r\n                            vm.forget = {\r\n                                status: false\r\n                            };\r\n                            vm.newUser = {};\r\n                            vm.activeForm = 0;\r\n                        } else if (response && response.data && response.data.Code) {\r\n                            if (response.data.isEmail) {\r\n                                growl.info('Sorry it looks like ' + vm.newUser.email + ' belongs to an existing account. Please login using this email address');\r\n                                vm.user.userName = vm.newUser.email;\r\n                            } else if (response.data.isPhone) {\r\n                                growl.info('Sorry it looks like ' + vm.newUser.phone + ' belongs to an existing account. Please login using this phone number');\r\n                                vm.user.userName = vm.newUser.phone;\r\n                            }\r\n                            vm.forget = {\r\n                                status: false\r\n                            };\r\n                            vm.newUser = {};\r\n                            vm.activeForm = 0;\r\n\r\n                        } else if (response && response.data && response.data.Error) {\r\n                            growl.info(response.data.Message);\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info('Unable to signup, try after some time');\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        function forgetPassword() {\r\n            if ($location.absUrl()) {\r\n                var url = $location.absUrl();\r\n                url = url.substring(0, url.indexOf('#') + 2) + 'reset/';\r\n                vm.forget.host = url;\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/forget\", vm.forget).then(\r\n                    function(response) {\r\n                        if (response && response.data && !response.data.Error) {\r\n                            growl.success('Check your email for password reset link');\r\n                        } else if (response && response.data && response.data.Error) {\r\n                            growl.info(response.data.Message);\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info('Mail not send, try after some time');\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        function requestOtp() {\r\n            vm.showResendOtp = false;\r\n            vm.newUser.otp = \"\";\r\n            if (vm.newUser.phone) {\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/sendOtp\", vm.newUser).then(\r\n                    function(response) {\r\n                        if (response && response.data.secret) {\r\n                            codeStr = response.data.secret;\r\n                            vm.isOtpSend = true;\r\n                            otpTimeout = $timeout(function() { vm.showResendOtp = true; }, 15000);\r\n                        } else if (response && response.data && response.data.Code) {\r\n                            if (response.data.isPhone) {\r\n                                growl.info('Sorry it looks like ' + vm.newUser.phone + ' belongs to an existing account. Please login using this phone number');\r\n                                vm.user.userName = vm.newUser.phone;\r\n                            }\r\n                            vm.forget = {\r\n                                status: false\r\n                            };\r\n                            vm.newUser = {};\r\n                            vm.activeForm = 0;\r\n                        } else {\r\n                            growl.info('Some error occured, try after some time');\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info(response.data.Message);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        function validateOtp() {\r\n            if (vm.newUser.otp && codeStr) {\r\n                $timeout.cancel(otpTimeout);\r\n                var data = {\r\n                    code: vm.newUser.otp,\r\n                    secret: codeStr\r\n                }\r\n                $http.post(CommonInfo.getAppUrl() + \"/api/validateOtp\", data).then(\r\n                    function(response) {\r\n                        if (response && !response.data.Error) {\r\n                            vm.isOtpValid = true;\r\n                        } else {\r\n                            growl.info('You have entered incorrect pin');\r\n                        }\r\n                    },\r\n                    function(response) {\r\n                        growl.info(response.data.Message);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .factory('CommonInfo', CommonInfo)\r\n        .factory('credentials', credentials)\r\n        .factory('Modal', Modal)\r\n        .directive('jwplayerjs', jwplayerjs)\r\n        .directive('whenScrollEnds', whenScrollEnds)\r\n        .filter('htmlToPlaintext', htmlToPlaintext)\r\n        .filter('charCodeToChar', charCodeToChar);\r\n\r\n    /** @ngInject */\r\n    function htmlToPlaintext() {\r\n        return function(text) {\r\n            return text ? String(text).replace(/<[^>]+>/gm, '') : '';\r\n        }\r\n    }\r\n\r\n    /** @ngInject */\r\n    function charCodeToChar() {\r\n        return function(code) {\r\n            //console.log(typeof code);\r\n            return String.fromCharCode(code);\r\n        }\r\n    }\r\n\r\n    /** @ngInject */\r\n    function jwplayerjs($compile) {\r\n        return {\r\n            restrict: 'EC',\r\n            scope: {\r\n                playerId: '@',\r\n                setupVars: '=setup'\r\n\r\n            },\r\n            link: function(scope, element, attrs) {\r\n                scope.$watch('setupVars', function(newValue, oldValue) {\r\n                    if (scope.setupVars) {\r\n                        var id = scope.playerId || 'random_player_' + Math.floor((Math.random() * 999999999) + 1),\r\n                            getTemplate = function(playerId) {\r\n                                return '<div id=\"' + playerId + '\"></div>';\r\n                            };\r\n\r\n                        element.html(getTemplate(id));\r\n                        $compile(element.contents())(scope);\r\n                        jwplayer(id).setup(scope.setupVars);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function whenScrollEnds($window) {\r\n        return {\r\n            restrict: \"A\",\r\n            link: function(scope, element, attrs) {\r\n                var visibleHeight = $window.innerHeight;\r\n                var threshold = 100;\r\n\r\n                element.scroll(function() {\r\n                    var scrollableHeight = element.prop('scrollHeight');\r\n                    var hiddenContentHeight = scrollableHeight - visibleHeight;\r\n\r\n                    if (hiddenContentHeight - element.scrollTop() <= threshold) {\r\n                        // Scroll is almost at the bottom. Loading more rows\r\n                        scope.$apply(attrs.whenScrollEnds);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function CommonInfo($localStorage, $state) {\r\n        return {\r\n            getInfoObj: function() {\r\n                return angular.copy($localStorage.infoObj);\r\n            },\r\n            getInfo: function(item) {\r\n                if (!$localStorage.infoObj || !$localStorage.infoObj.user)\r\n                    $state.go('login');\r\n                else\r\n                    return angular.copy($localStorage.infoObj[item]);\r\n            },\r\n            setInfo: function(item, value) {\r\n                var obj = $localStorage.infoObj || {};\r\n                obj[item] = angular.copy(value);\r\n                $localStorage.infoObj = obj;\r\n            },\r\n            reset: function() {\r\n                $localStorage.$reset();\r\n            },\r\n            getAppUrl: function() {\r\n                return 'http://52.66.119.248';\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function credentials(CommonInfo) {\r\n        return {\r\n            getCredentials: function() {\r\n                if (CommonInfo.getInfo('user'))\r\n                    var userType = CommonInfo.getInfo('user').profileType;\r\n                var config = {};\r\n                switch (userType) {\r\n                    case 'admin':\r\n                        config = {\r\n                            tabs: {\r\n                                library: false,\r\n                                allCourses: true,\r\n                                myCourses: false,\r\n                                allLessons: true,\r\n                                instructor: true,\r\n                                students: true,\r\n                                test: true,\r\n                                exam: false\r\n                            },\r\n                            createCourse: true,\r\n                            createLesson: true,\r\n                            createTest: true,\r\n                            createQuestionPaper: true,\r\n                            createQuestion: true\r\n                        };\r\n                        break;\r\n                    case 'student':\r\n                        config = {\r\n                            tabs: {\r\n                                library: true,\r\n                                allCourses: false,\r\n                                myCourses: true,\r\n                                allLessons: false,\r\n                                instructor: false,\r\n                                students: false,\r\n                                test: false,\r\n                                exam: true\r\n                            },\r\n                            createCourse: false,\r\n                            createLesson: false,\r\n                            createTest: false,\r\n                            createQuestionPaper: false,\r\n                            createQuestion: false\r\n                        };\r\n                        break;\r\n                };\r\n                return config;\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @ngInject */\r\n    function Modal($uibModal) {\r\n        return {\r\n            openModal: function(templateUrl) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: templateUrl,\r\n                    bindToController: true,\r\n                    controllerAs: 'vm'\r\n                });\r\n\r\n                modalInstance.result.then(function(selectedItem) {\r\n\r\n                }, function() {\r\n                    $log.info('Modal dismissed at: ' + new Date());\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('web')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n            .state('login', {\r\n                url: '/',\r\n                templateUrl: 'app/login/login.html',\r\n                controller: 'LoginController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('reset', {\r\n                url: '/reset/:token',\r\n                templateUrl: 'app/login/resetPassword.html',\r\n                controller: 'ResetPasswordController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main', {\r\n                url: '/main',\r\n                abstract: true,\r\n                templateUrl: 'app/main/main.html',\r\n                controller: 'MainController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.profile', {\r\n                url: '/profile',\r\n                templateUrl: 'app/partical/profile.html'\r\n            })\r\n            .state('main.libary', {\r\n                url: '/libary',\r\n                templateUrl: 'app/partical/libary.html'\r\n            })\r\n            .state('main.myCourses', {\r\n                url: '/myCourses',\r\n                templateUrl: 'app/partical/myCourses.html'\r\n            })\r\n            .state('main.myLessons', {\r\n                url: '/myLessons',\r\n                templateUrl: 'app/partical/myLessons.html'\r\n            })\r\n            .state('main.createCourse', {\r\n                url: '/addCourse',\r\n                templateUrl: 'app/partical/createCourse.html'\r\n            })\r\n            .state('main.editCourse', {\r\n                url: '/editCourse',\r\n                templateUrl: 'app/partical/createCourse.html'\r\n            })\r\n            .state('main.courses', {\r\n                url: '/courses',\r\n                templateUrl: 'app/partical/courses.html'\r\n            })\r\n            .state('main.courseStudent', {\r\n                url: '/courseStudent',\r\n                templateUrl: 'app/partical/courseStudent.html',\r\n                controller: 'CourseStudentController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.lessons', {\r\n                url: '/lessons',\r\n                templateUrl: 'app/partical/lessons.html'\r\n            })\r\n            .state('main.editLesson', {\r\n                url: '/editLesson',\r\n                templateUrl: 'app/partical/createLesson.html'\r\n            })\r\n            .state('main.createLesson', {\r\n                url: '/addLesson',\r\n                templateUrl: 'app/partical/createLesson.html'\r\n            })\r\n            .state('main.comments', {\r\n                url: '/comments',\r\n                templateUrl: 'app/partical/lessonComments.html'\r\n            })\r\n            .state('main.instructors', {\r\n                url: '/instructors',\r\n                templateUrl: 'app/partical/users.html'\r\n            })\r\n            .state('main.students', {\r\n                url: '/students',\r\n                templateUrl: 'app/partical/users.html'\r\n            })\r\n            .state('main.createBatch', {\r\n                url: '/addBatch',\r\n                templateUrl: 'app/partical/createBatch.html'\r\n            })\r\n            .state('main.editBatch', {\r\n                url: '/updateBatch',\r\n                templateUrl: 'app/partical/createBatch.html'\r\n            })\r\n            .state('main.createUser', {\r\n                url: '/addUser',\r\n                templateUrl: 'app/partical/profile.html'\r\n            })\r\n            .state('main.editUser', {\r\n                url: '/editUser',\r\n                templateUrl: 'app/partical/profile.html'\r\n            })\r\n            .state('main.test', {\r\n                url: '/test',\r\n                abstract: true,\r\n                templateUrl: 'app/test/testHome.html',\r\n                controller: 'TestController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.test.home', {\r\n                url: '/list',\r\n                templateUrl: 'app/test/test.html'\r\n            })\r\n            .state('main.test.createTest', {\r\n                url: '/addTest',\r\n                templateUrl: 'app/test/editTest.html'\r\n            })\r\n            .state('main.test.editTest', {\r\n                url: '/editTest',\r\n                templateUrl: 'app/test/editTest.html'\r\n            })\r\n            .state('main.test.createTestSeries', {\r\n                url: '/addTestSeries',\r\n                templateUrl: 'app/test/editTestSeries.html'\r\n            })\r\n            .state('main.test.editTestSeries', {\r\n                url: '/editTestSeries',\r\n                templateUrl: 'app/test/editTestSeries.html'\r\n            })\r\n            .state('main.test.createQuestion', {\r\n                url: '/addQuestion',\r\n                templateUrl: 'app/test/editQuestion.html'\r\n            })\r\n            .state('main.test.editQuestion', {\r\n                url: '/editQuestion',\r\n                templateUrl: 'app/test/editQuestion.html'\r\n            })\r\n            .state('main.test.studentList', {\r\n                url: '/studentList',\r\n                templateUrl: 'app/test/testUsers.html',\r\n                controller: 'StudentListController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.test.questionList', {\r\n                url: '/questionList',\r\n                templateUrl: 'app/test/questionList.html',\r\n                controller: 'QuestionListController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.testSeries', {\r\n                url: '/Series',\r\n                templateUrl: 'app/test/testSeries.html',\r\n                controller: 'TestSeriesListController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.test.testSeriesStudent', {\r\n                url: '/testSeriesStudent',\r\n                templateUrl: 'app/test/seriesStudent.html',\r\n                controller: 'SeriesStudentController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.examsList', {\r\n                url: '/examsList',\r\n                templateUrl: 'app/test/examsList.html',\r\n                controller: 'ExamListController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.exam', {\r\n                url: '/exam',\r\n                templateUrl: 'app/test/exam.html',\r\n                controller: 'ExamController',\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('main.examAnswers', {\r\n                url: '/examAnswers',\r\n                templateUrl: 'app/test/testAnswers.html',\r\n                controller: 'TestAnswersController',\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }\r\n\r\n})();\r\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('web')\n    .constant('moment', moment)\n    .constant('_', window._);\n\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('web')\r\n        .config(config);\r\n\r\n    /** @ngInject */\r\n    function config($logProvider, growlProvider, blockUIConfig) {\r\n        // Enable log\r\n        $logProvider.debugEnabled(true);\r\n\r\n        //growl config\r\n        growlProvider.globalReversedOrder(true);\r\n        growlProvider.globalTimeToLive(5000);\r\n        growlProvider.globalDisableIcons(true);\r\n\r\n        //block-ui\r\n        blockUIConfig.delay = 0;\r\n    }\r\n\r\n})();\r\n\nangular.module(\"web\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<!-- <div class=\\\"top-content\\\" style=\\\"background-color:F8F8F8;\\\">\\r\\n    <div class=\\\"inner-bg\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-2 text\\\">\\r\\n                    <img src=\\\"/assets/images/forumias-png.png\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-5\\\">\\r\\n                    <div class=\\\"form-box\\\">\\r\\n                        <div class=\\\"form-top\\\">\\r\\n                            <div class=\\\"form-top-left\\\">\\r\\n                                <h3>Login</h3>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-top-right\\\">\\r\\n                                <i class=\\\"fa fa-key\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-bottom\\\">\\r\\n                            <form role=\\\"form\\\" action=\\\"\\\" method=\\\"post\\\" class=\\\"login-form\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-username\\\">Email or Phone</label>\\r\\n                                    <input type=\\\"text\\\" ng-model=\\\"vm.user.email\\\" placeholder=\\\"Email or Phone...\\\" class=\\\"form-username form-control\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-password\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" ng-model=\\\"vm.user.password\\\" placeholder=\\\"Password...\\\" class=\\\"form-password form-control\\\" />\\r\\n                                </div>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"vm.login()\\\">Sign in!</button>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-1 middle-border\\\"></div>\\r\\n                <div class=\\\"col-sm-1\\\"></div>\\r\\n                <div class=\\\"col-sm-5\\\">\\r\\n                    <div class=\\\"form-box\\\">\\r\\n                        <div class=\\\"form-top\\\">\\r\\n                            <div class=\\\"form-top-left\\\">\\r\\n                                <h3>Sign up</h3>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-top-right\\\">\\r\\n                                <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-bottom\\\">\\r\\n                            <form role=\\\"form\\\" action=\\\"\\\" method=\\\"post\\\" class=\\\"registration-form\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-first-name\\\">First name</label>\\r\\n                                    <input type=\\\"text\\\" placeholder=\\\"First name...\\\" class=\\\"form-first-name form-control\\\" ng-model=\\\"vm.newUser.firstName\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-last-name\\\">Last name</label>\\r\\n                                    <input type=\\\"text\\\" placeholder=\\\"Last name...\\\" ng-model=\\\"vm.newUser.lastName\\\" class=\\\"form-last-name form-control\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-email\\\">Email</label>\\r\\n                                    <input type=\\\"text\\\" placeholder=\\\"Email...\\\" class=\\\"form-email form-control\\\" ng-model=\\\"vm.newUser.email\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-phone\\\">Phone Number</label>\\r\\n                                    <input type=\\\"text\\\" placeholder=\\\"Phone...\\\" class=\\\"form-phone form-control\\\" ng-model=\\\"vm.newUser.phone\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"sr-only\\\" for=\\\"form-password\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" placeholder=\\\"Password...\\\" class=\\\"form-password form-control\\\" ng-model=\\\"vm.newUser.password\\\" />\\r\\n                                </div>\\r\\n                                <button type=\\\"button\\\" ng-click=\\\"vm.signup()\\\" class=\\\"btn\\\">Sign me up!</button>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n<footer>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n--><div class=body-background login-area><div class=container-fluid ng-cloak><div class=\\\"row top\\\"><div class=\\\"col-md-4 col-md-offset-8 col-xs-12 col-xs-offset-1\\\"><span class=logo-mobile></span><div class=well><uib-tabset active=vm.activeForm><uib-tab index=0 heading=Login><form style=margin-top:15px ng-if=!vm.forget.status><div class=form-group><label for=profile.email>Email or Phone number</label><input type=text class=form-control id=profile.email placeholder=\\\"Email or Phone number\\\" ng-model=vm.user.userName></div><div class=form-group><label for=profile.password>Password</label><input type=password class=form-control id=profile.password placeholder=Password ng-model=vm.user.password ng-keyup=\\\"$event.keyCode == 13 && vm.login()\\\"><div class=text-right><a href=javascript:void(0); ng-click=\\\"vm.forget.status = true;\\\">Forgot Password</a></div></div><div class=form-group><input class=\\\"btn btn-primary pull-right\\\" type=button ng-click=vm.login() value=Login></div><div class=clearfix></div></form><form style=margin-top:15px ng-if=vm.forget.status><div class=form-group><label for=profile.email>Email</label><input type=text required class=form-control id=profile.email placeholder=Email ng-model=vm.forget.email></div><div class=form-group><input class=\\\"btn btn-primary pull-right\\\" type=button ng-click=vm.forgetPassword(); value=\\\"Send Request\\\"></div><div class=clearfix></div></form></uib-tab><uib-tab index=1 heading=Signup><form style=margin-top:15px ng-if=\\\"vm.isOtp && !vm.isOtpSend && !vm.isOtpValid\\\" name=signup><div class=form-group><label for=profile.phone>Phone</label><input name=phone type=text required ng-minlength=10 min=10 class=form-control id=profile.phone maxlength=10 placeholder=Phone ng-model=vm.newUser.phone></div><input class=\\\"btn btn-primary pull-right\\\" ng-disabled=!signup.phone.$valid type=button ng-click=vm.requestOtp() value=Continue><div class=clearfix></div><a href=javascript:void(0); ng-click=\\\"vm.activeForm=0\\\"><span>Exisiting User? Login</span></a></form><form style=margin-top:15px ng-if=\\\"vm.isOtp && vm.isOtpSend && !vm.isOtpValid\\\"><div class=form-group><label for=profile.otp>Enter verification code</label><input type=text class=form-control id=profile.otp placeholder=\\\"Verification Code\\\" ng-model=vm.newUser.otp><div class=text-right ng-if=vm.showResendOtp><a href=javascript:void(0); ng-click=vm.requestOtp();>Resend verification code</a></div></div><input class=\\\"btn btn-primary pull-right\\\" type=button ng-click=vm.validateOtp() value=\\\"Submit Verification Code\\\"><div class=clearfix></div></form><form style=margin-top:15px ng-if=\\\"!vm.isOtp || vm.isOtpValid\\\"><div class=form-group><label for=profile.fullName>Full Name</label><i class=pull-right>(All fields are mandatory)</i> <input type=text class=form-control id=profile.fullName placeholder=\\\"Full Name\\\" ng-model=vm.newUser.fullName></div><div class=form-group><label for=profile.email>Email</label><input type=email class=form-control id=profile.email placeholder=Email ng-model=vm.newUser.email></div><div class=form-group><label for=profile.phone>Phone</label><input type=text class=form-control id=profile.phone maxlength=10 ng-if=!vm.isOtp placeholder=Phone ng-model=vm.newUser.phone><p class=form-control-static ng-bind=vm.newUser.phone ng-if=vm.isOtp></p></div><div class=form-group><label for=profile.password>Password</label><input type=password class=form-control id=profile.password placeholder=Password ng-model=vm.newUser.password></div><div class=form-group><label for=profile.confirmPassword>Confirm Password</label><input type=password class=form-control id=profile.confirmPassword placeholder=\\\"Confirm Password\\\" ng-model=vm.newUser.confirmPassword></div><input class=\\\"btn btn-primary pull-right\\\" type=button ng-click=vm.signup() value=\\\"Sign me Up\\\"><div class=clearfix></div></form></uib-tab></uib-tabset></div></div></div></div></div>\");\n$templateCache.put(\"app/login/resetPassword.html\",\"<div class=body-background login-area><div class=container-fluid ng-cloak><div class=row style=margin-top:20px><div class=\\\"col-md-4 col-md-offset-8 col-xs-12 col-xs-offset-1\\\" style=margin-right:4px><div class=well><uib-tabset active=0><uib-tab index=0 heading=\\\"Reset Password\\\"><form style=margin-top:15px><div class=form-group><label for=profile.password>Password</label><input type=password class=form-control id=profile.password placeholder=Password ng-model=vm.user.password></div><div class=form-group><label for=profile.confirmPassword>Confirm Password</label><input type=password class=form-control id=profile.confirmPassword placeholder=\\\"Confirm Password\\\" ng-model=vm.user.confirmPassword ng-keyup=\\\"$event.keyCode == 13 && vm.login()\\\"></div><div class=form-group><input class=\\\"btn btn-default pull-right\\\" type=button ng-click=\\\"vm.user.password == vm.user.confirmPassword && vm.resetPassword()\\\" value=Reset></div><div class=clearfix></div></form></uib-tab></uib-tabset></div></div></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=container-fluid ng-cloak><!-- header nav starts --><nav class=\\\"navbar navbar-default navbar-fixed-top\\\"><div class=container-fluid><div class=navbar-header><button type=button class=navbar-toggle ng-click=\\\"vm.isCollapsed = !vm.isCollapsed\\\" aria-expanded=false><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=javascript:void(0);><img src=assets/images/forumias-small.png style=margin-top:-11px></a></div><div class=\\\"navbar-collapse collapse in\\\" uib-collapse=vm.isCollapsed aria-expanded=false style=margin-right:25px;overflow:hidden><!-- <div class=\\\"collapse navbar-collapse\\\" uib-dropdown-menu role=\\\"menu\\\" aria-labelledby=\\\"single-button\\\"> --> <span class=\\\"nav navbar-nav navbar-right\\\" uib-dropdown><img ng-src=\\\"{{vm.userInfo.profilePhoto || \\'assets/images/defaultProfileImg.png\\'}}\\\" style=\\\"width:50px;border:1px solid gainsboro\\\" class=\\\"img-responsive center-block img-circle\\\" id=simple-dropdown uib-dropdown-toggle><ul class=dropdown-menu uib-dropdown-menu aria-labelledby=simple-dropdown><li role=menuitem ng-click=\\\"vm.editUser(\\'update\\', vm.userInfo);\\\"><a href=javascript:void(0);>Edit Profile</a></li><li class=divider></li><li role=menuitem ng-click=vm.signout()><a href=javascript:void(0);>Sign Out</a></li></ul></span><form class=\\\"navbar-form navbar-right\\\" role=search ng-if=false><div class=input-group><input type=text class=form-control placeholder=\\\"Search courses by name..\\\" ng-model=vm.searchText> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button ng-click=vm.searchCourse();>Go!</button></span></div></form><span class=\\\"navbar-form navbar-right\\\">Hello <span ng-bind=vm.userInfo.fullName></span><div>Roll No. <span ng-bind=vm.userInfo.id></span></div></span><!-- project menu --><ul class=\\\"nav navbar-nav navbar-left\\\"><li ui-sref=main.libary ui-sref-active=active ng-if=vm.config.tabs.library><a href=javascript:void(0); ng-click=vm.courseLibary();><i class=\\\"fa fa-database fa-fw\\\" aria-hidden=true></i> Library</a></li><li ui-sref=main.myCourses ui-sref-active=active ng-if=vm.config.tabs.myCourses><a href=javascript:void(0); ng-click=vm.getMyCourses();><i class=\\\"fa fa-clone fa-fw\\\" aria-hidden=true></i> My Courses</a></li><li ui-sref=main.courses ui-sref-active=active ng-if=vm.config.tabs.allCourses><a href=javascript:void(0); ng-click=vm.getAllCourses();><i class=\\\"fa fa-database fa-fw\\\" aria-hidden=true></i> Course</a></li><li ui-sref=main.lessons ui-sref-active=active ng-if=vm.config.tabs.allLessons><a href=javascript:void(0); ng-click=vm.getAllLessons();><i class=\\\"fa fa-clone fa-fw\\\" aria-hidden=true></i> Lessons</a></li><li ui-sref=main.instructors ui-sref-active=active ng-if=vm.config.tabs.instructor><a href=javascript:void(0); ng-click=\\\"vm.getUsers(\\'instructor\\');\\\"><i class=\\\"fa fa-user fa-fw\\\" aria-hidden=true></i> Instructors</a></li><li ui-sref=main.students ui-sref-active=active ng-if=vm.config.tabs.students><a href=javascript:void(0); ng-click=\\\"vm.getUsers(\\'student\\');\\\"><i class=\\\"fa fa-users fa-fw\\\" aria-hidden=true></i> Students</a></li><li ui-sref=main.test.home ng-if=vm.config.tabs.test><a href=javascript:void(0); ng-click=vm.getAllTests();><i class=\\\"fa fa-certificate fa-fw\\\" aria-hidden=true></i> Test</a></li><li ui-sref=main.testSeries ng-if=vm.config.tabs.exam><a href=javascript:void(0);><i class=\\\"fa fa-certificate fa-fw\\\" aria-hidden=true></i> Test Series</a></li></ul><!-- project menu --></div></div></nav><!-- header nav ends --><div class=row style=margin-top:65px><div class=col-md-12><div ui-view></div></div></div></div>\");\n$templateCache.put(\"app/partical/courseStudent.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><form class=\\\"form-inline pull-left\\\" role=search><div class=input-group><input type=text class=form-control placeholder=Search... ng-model=vm.searchText ng-keyup=\\\"($event.which === 13 || !vm.searchText) && vm.searchStudent();\\\"> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button ng-click=vm.searchStudent();>Go!</button></span></div></form><div class=clearfix></div></div><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.courseUserCount></span></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getCourseUsers(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentCourseUserPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentCourseUserPage != 1 && vm.getCourseUsers(vm.currentCourseUserPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentCourseUserPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentCourseUserPage == vm.lastCoursUserPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentCourseUserPage != vm.lastCoursUserPage && vm.getCourseUsers(vm.currentCourseUserPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getCourseUsers(vm.lastCoursUserPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>Roll No.</th><th>Name</th><th>Email</th><th>Phone</th><th>Mode</th></tr></thead><tbody><tr ng-repeat=\\\"user in vm.courseUsers\\\"><td ng-bind=user.id></td><td ng-bind=user.fullName></td><td ng-bind=user.email></td><td ng-bind=user.phone></td><td ng-bind=user.mode></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getCourseUsers(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentCourseUserPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentCourseUserPage != 1 && vm.getCourseUsers(vm.currentCourseUserPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentCourseUserPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentCourseUserPage == vm.lastCoursUserPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentCourseUserPage != vm.lastCoursUserPage && vm.getCourseUsers(vm.currentCourseUserPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getCourseUsers(vm.lastCoursUserPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav></div></div></div></div>\");\n$templateCache.put(\"app/partical/courses.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><span class=pull-right><button type=button class=\\\"btn btn-default\\\" uib-popover-template=\\\"\\'categoryPopuptpl.html\\'\\\" popover-is-open=vm.categoryPopup popover-trigger=click popover-title=Categories popover-placement=bottom><i class=\\\"fa fa-plus\\\" aria-hidden=true></i> New Category</button> <button type=button class=\\\"btn btn-default\\\" ng-click=\\\"vm.editCourse(\\'insert\\');\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=true></i> New Course</button></span><div class=clearfix></div></div><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey\\\"><!-- <caption>\\r\\n                        \\r\\n                        \\r\\n                    </caption> --><thead><tr class=success><th>#</th><th>Course Name</th><th>Durations</th><th>Instructors</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"course in vm.courses\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=course.name></td><td ng-bind=course.duration></td><td><span ng-repeat=\\\"instructor in course.instructors\\\"><span ng-bind=instructor.fullName></span><span ng-if=!$last>,</span></span></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.getCourseById(course.id); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteCourse(course)></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" ng-style=\\\"course.isPublished && {\\'color\\' :\\'green\\' }\\\" title=Publish aria-hidden=true ng-click=vm.publishCourse(course)></i> <i class=\\\"fa fa-users fa-lg fa-fw\\\" title=\\\"Show students\\\" aria-hidden=true ng-click=vm.showCourseStudent(course)></i></td></tr></tbody></table></div><script type=text/ng-template id=categoryPopuptpl.html><div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"category.name\\\">Category Name</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"New Category\\\" ng-model=\\\"vm.newCategory.name\\\" />\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                              <button class=\\\"btn btn-default\\\" ng-click=\\\"vm.addCategory()\\\" type=\\\"button\\\">Add</button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <ul class=\\\"list-group\\\" style=\\\"height:250px;overflow-x:auto;\\\">\\r\\n                        <li class=\\\"list-group-item\\\" ng-repeat=\\\"category in vm.categories\\\">\\r\\n                            <span class=\\\"badge\\\" ng-if=\\\"category.coursesCount > 0\\\" ng-bind=\\\"category.coursesCount\\\" title=\\\"Number of courses in category\\\"></span>\\r\\n                            <span ng-bind=\\\"category.name\\\"></span>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div></script></div></div></div>\");\n$templateCache.put(\"app/partical/createBatch.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=batch.name>Batch Name</label><input type=text class=form-control id=batch.name placeholder=\\\"Batch Name\\\" ng-model=vm.batch.name></div></div><div class=\\\"col-md-6 row\\\"><div class=form-group><label for=batch.description>Description</label><input type=text class=form-control id=batch.description placeholder=Description ng-model=vm.batch.description></div></div></div><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.addBatch(); ng-if=\\\"vm.objMode == \\'insert\\'\\\"><span>Save</span></button> <button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateBatch(); ng-if=\\\"vm.objMode == \\'edit\\'\\\"><span>Update</span></button></div></form></div>\");\n$templateCache.put(\"app/partical/createCourse.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=course.cname>Course Name</label><input type=text class=form-control id=course.cname placeholder=\\\"Course Name\\\" ng-model=vm.course.name></div></div><div class=\\\"col-md-6 row\\\"><div class=\\\"form-group col-md-6\\\"><label for=course.duration>Duration(in hours)</label><input type=text class=form-control id=course.duration placeholder=Duration ng-model=vm.course.duration></div><div class=\\\"form-group col-md-6\\\"><label for=course.validTo>Valid Till</label><label class=pull-right><input type=checkbox ng-model=vm.course.isForever> Forever</label><div class=clearfix></div><p class=input-group><!-- <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"{{vm.format}}\\\" ng-model=\\\"vm.course.validTo\\\" is-open=\\\"popup2.opened\\\" datepicker-options=\\\"vm.dateOptions\\\" close-text=\\\"Close\\\" ng-disabled=\\\"vm.course.isForever\\\" />\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"!vm.course.isForever && popup2.opened = true\\\">\\r\\n                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </button>\\r\\n                        </span> --> <input type=text class=form-control uib-datepicker-popup={{vm.format}} ng-model=vm.course.validTo is-open=popup2.opened datepicker-options=vm.dateOptions close-text=Close ng-disabled=vm.course.isForever> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-disabled=vm.course.isForever ng-click=\\\"popup2.opened = true\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i></button></span></p></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=course.shortDescription>Short Description</label><textarea class=form-control id=course.shortDescription placeholder=\\\"Short Description\\\" ng-model=vm.course.shortDescription rows=5 style=resize:none maxlength=150></textarea><!-- <text-angular ta-toolbar=\\\"vm.toolBar\\\" id=\\\"course.description\\\" placeholder=\\\"Description\\\" ng-model=\\\"vm.course.description\\\" ng-model=\\\"htmlVariable\\\"></text-angular> --></div></div><div class=col-md-6><div class=form-group><label for=course.demoVideo>Demo Video Link</label><input type=text class=form-control id=course.demoVideo placeholder=\\\"Demo Video Link\\\" ng-model=vm.course.demoVideo></div><div class=form-group><label for=course.demoPoster>Demo Poster Link</label><input type=text class=form-control id=course.demoPoster placeholder=\\\"Demo Poster Link\\\" ng-model=vm.course.demoPoster></div></div></div><div class=row><div class=col-md-12><div class=form-group><label for=course.description>Description</label><text-angular ta-toolbar=vm.toolBar id=course.description placeholder=Description ng-model=vm.course.description></text-angular></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=course.validTo>Category</label><select class=form-control ng-options=\\\"category.id as category.name for category in vm.categories\\\" ng-model=vm.course.categoryId><option value=\\\"\\\">Choose</option></select></div></div><div class=col-md-6><div class=\\\"form-group col-md-6\\\"><label for=course.subscriptionFee>Subscription Fee</label><div class=input-group><span class=input-group-addon id=basic-addon1><i class=\\\"fa fa-inr\\\" aria-hidden=true></i> </span><input type=text class=form-control id=course.subscriptionFee placeholder=\\\"Subscription Fee\\\" ng-model=vm.course.subscriptionFee></div></div><div class=\\\"form-group col-md-6\\\"><label class=pull-right><input type=checkbox ng-model=vm.course.isSendMail> Notification on new Lesson</label></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=course.unit>Units</label><p class=input-group><input type=text class=form-control id=course.unit placeholder=\\\"Enter unit name click \\'+\\' button ->\\\" ng-model=vm.course.courseUnit> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=vm.addUnitToCourse();><i class=\\\"fa fa-plus\\\" aria-hidden=true></i></button></span></p><div><div class=btn-toolbar role=toolbar><div class=\\\"btn-group btn-group-sm\\\" role=group ng-repeat=\\\"unit in vm.course.units\\\" ng-if=!unit.isDeleted><button type=button class=\\\"btn btn-default\\\" style=cursor:default disabled ng-bind=unit.name></button> <button type=button class=\\\"btn btn-default\\\" ng-click=\\\"unit.isDeleted = true\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=true></i></button></div></div></div></div></div><div class=col-md-6><div class=form-group><label for=course.instructor>Instructors</label><select class=form-control ng-change=vm.addUserToCourse(); ng-options=\\\"user as user.fullName for user in vm.users\\\" ng-model=vm.course.courseUser><option value=\\\"\\\">Choose</option></select><div style=margin-top:10px><div class=btn-toolbar role=toolbar><div class=\\\"btn-group btn-group-sm\\\" role=group ng-repeat=\\\"user in vm.course.instructors\\\" ng-if=!user.isDeleted><button type=button class=\\\"btn btn-default\\\" style=cursor:default disabled ng-bind=user.fullName></button> <button type=button class=\\\"btn btn-default\\\" ng-click=\\\"user.isDeleted = true\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=true></i></button></div></div></div></div></div></div><div class=row ng-if=false><div class=col-md-6><div class=form-group><label for=course.validTo>Upload Brochure</label><div><input class=\\\"btn btn-default\\\" type=button value=\\\"Select File\\\" ngf-select ng-model=vm.course.file name=file ngf-pattern=\\\"\\'.pdf\\'\\\" ngf-accept=\\\"\\'.pdf\\'\\\" ngf-max-size=20MB> <span ng-if=\\\"vm.course.file.name || vm.course.fileName\\\"><i class=\\\"fa fa-file-pdf-o\\\" aria-hidden=true></i> <span ng-bind=\\\"vm.course.file.name || vm.course.fileName\\\"></span> <i class=\\\"fa fa-trash-o\\\" aria-hidden=true ng-click=\\\"vm.course.file = \\'\\'\\\"></i></span></div></div></div></div><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateCourse(vm.course.file);><span ng-if=\\\"vm.objMode == \\'edit\\'\\\">Update</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save</span></button></div></form></div>\");\n$templateCache.put(\"app/partical/createLesson.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=lesson.name>Lesson Name</label><input type=text class=form-control id=lesson.name placeholder=\\\"Lesson Name\\\" ng-model=vm.lesson.name></div></div><div class=col-md-6><div class=col-md-6><div class=form-group><label for=lesson.duration>Duration(in minutes)</label><input type=text class=form-control id=lesson.duration placeholder=Duration ng-model=vm.lesson.duration></div></div><div class=col-md-6><div class=form-group><input type=checkbox ng-model=vm.lesson.isCommentingAllowed> Commenting Allowed</div></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=lesson.description>Description</label><!-- <textarea class=\\\"form-control\\\" id=\\\"lesson.description\\\" placeholder=\\\"Description\\\" ng-model=\\\"vm.lesson.description\\\" rows=\\\"5\\\"></textarea> --><text-angular ta-toolbar=vm.toolBar id=lesson.description placeholder=Description ng-model=vm.lesson.description></text-angular></div></div><div class=col-md-6><div class=form-group><label for=lesson.video>Video Link</label><input type=text class=form-control id=lesson.video placeholder=\\\"Video Link\\\" ng-model=vm.lesson.video></div><div class=form-group><label for=lesson.poster>Video Poster</label><input type=text class=form-control id=lesson.poster placeholder=\\\"Video Poster\\\" ng-model=vm.lesson.poster></div></div></div><div class=row><div class=col-md-6><div class=col-md-6><div class=form-group><label for=lesson.course>Select Course</label><select class=form-control ng-change=vm.changeCourse() ng-options=\\\"course.id as course.name for course in vm.courseUnitList\\\" ng-model=vm.lesson.courses[0].courseId><option value=\\\"\\\">Choose</option></select></div></div><div class=col-md-6><div class=form-group><label for=lesson.unit>Select Unit</label><select class=form-control ng-options=\\\"unit.id as unit.name for unit in vm.lesson.unitList\\\" ng-model=vm.lesson.courses[0].unitId><option value=\\\"\\\">Choose</option></select><!-- <p class=\\\"input-group\\\">\\r\\n                            <select class=\\\"form-control\\\" ng-options=\\\"unit.id as unit.name for unit in vm.lesson.unitList\\\" ng-model=\\\"vm.lesson.courses[0].unitId\\\">\\r\\n                                <option value=\\\"\\\">Choose</option>\\r\\n                            </select>\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </button>\\r\\n                            </span>\\r\\n                        </p> --></div></div></div><div class=col-md-6><div class=form-group><label for=lesson.files>Upload Files</label><div><input class=\\\"btn btn-default\\\" multiple ng-change=vm.addFilesToLesson(); type=button value=\\\"Select File\\\" ngf-select ng-model=vm.lesson.file name=file ngf-pattern=\\\"\\'.pdf\\'\\\" ngf-accept=\\\"\\'.pdf\\'\\\" ngf-max-size=20MB></div><div style=margin-top:10px><div class=btn-toolbar role=toolbar><div class=\\\"btn-group btn-group-sm\\\" role=group ng-repeat=\\\"file in vm.lesson.files\\\"><button type=button class=\\\"btn btn-default\\\" style=cursor:default disabled ng-bind=file.fileName></button> <button type=button class=\\\"btn btn-default\\\" ng-click=\\\"vm.lesson.files.splice($index, 1);\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=true></i></button></div></div></div><div style=margin-top:10px><div class=btn-toolbar role=toolbar><div class=\\\"btn-group btn-group-sm\\\" role=group ng-repeat=\\\"file in vm.lesson.newFiles\\\"><button type=button class=\\\"btn btn-default\\\" style=cursor:default disabled ng-bind=file.name></button> <button type=button class=\\\"btn btn-default\\\" ng-click=\\\"vm.lesson.newFiles.splice($index, 1);\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=true></i></button></div></div></div></div></div></div><div class=row><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateLesson(vm.lesson.newFiles)><span ng-if=\\\"vm.objMode == \\'edit\\'\\\">Update</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save</span></button></div></div></form></div>\");\n$templateCache.put(\"app/partical/lessonComments.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=media ng-repeat=\\\"comment in vm.lessonComments\\\"><div class=media-left><a href=#><img class=media-object ng-src=\\\"{{comment.commentedBy.profilePhoto || \\'assets/images/defaultProfileImg.png\\'}}\\\" alt=... style=height:45px></a></div><div class=\\\"media-body well well-sm\\\"><div class=media-heading><h4 ng-bind=comment.commentedBy.fullName style=margin:0px></h4><span style=\\\"font-size: smaller\\\" ng-bind=\\\"comment.timestamp | date: format: medium\\\"></span></div><p ng-bind=comment.comments></p></div></div><div class=media><div class=media-left><a href=#><img class=media-object ng-src=\\\"{{vm.userInfo.profilePhoto || \\'assets/images/defaultProfileImg.png\\'}}\\\" alt=... style=height:45px></a></div><div class=\\\"media-body well well-sm\\\"><div class=media-heading><h4 ng-bind=vm.userInfo.fullName style=margin:0px></h4></div><p><textarea rows=3 style=width:100% ng-model=vm.commentMsg></textarea><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.commentOnLesson()>Send</button></p></div></div></div></div></div>\");\n$templateCache.put(\"app/partical/lessons.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><!-- Default panel contents --><div class=panel-heading><button type=button class=\\\"btn btn-default pull-right visible-xs-block visible-md-block\\\" ng-click=\\\"vm.editLesson(\\'insert\\')\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=true></i> New Lesson</button> <button type=button class=\\\"btn btn-default pull-right visible-lg-block\\\" ng-click=\\\"vm.editLesson(\\'insert\\')\\\"><i title=\\\"Add Lesson\\\" class=\\\"fa fa-plus\\\" aria-hidden=true></i></button><div class=clearfix></div></div><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey\\\"><thead><tr class=success><th>#</th><th>Lesson Name</th><th>Description</th><th>Files</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"lesson in vm.lessons\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=lesson.name></td><td ng-bind=\\\"lesson.description | htmlToPlaintext\\\"></td><td><span ng-repeat=\\\"file in lesson.files\\\"><span ng-bind=file.fileName></span><span ng-if=!$last>,</span></span></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=\\\"Edit Lesson\\\" aria-hidden=true ng-click=vm.getLessonById(lesson.id) style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=\\\"Delete Lesson\\\" aria-hidden=true ng-click=vm.deleteLesson(lesson)></i> <i class=\\\"fa fa-comment-o fa-lg fa-fw\\\" title=\\\"Show Comments\\\" aria-hidden=true ng-click=vm.getLessonComments(lesson) ng-if=lesson.comments></i></td></tr></tbody></table></div></div></div></div>\");\n$templateCache.put(\"app/partical/libary.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-4 ng-repeat=\\\"course in vm.courses\\\"><div class=panel ng-style=\\\"{\\'border-color\\': course.color_code || \\'#337AB7\\'}\\\"><div class=panel-heading ng-style=\\\"{\\'border-color\\': course.color_code || \\'#337AB7\\', \\'background-color\\': course.color_code || \\'#337AB7\\'}\\\"><span ng-bind=course.name></span> <span class=pull-right><i class=\\\"fa fa-clock-o\\\" aria-hidden=true></i> <span ng-bind=course.duration></span> hours</span></div><div class=\\\"panel-body fixedheight\\\"><div class=body-fixed-height ng-bind=course.shortDescription></div><div class=\\\"btn-group bottomright\\\"><button type=button class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"vm.showCourseInfo(course.id, course.name, course.description)\\\"><i class=\\\"fa fa-info\\\" aria-hidden=true></i> View More</button> <a ng-if=\\\"course.filePath && course.filePath != null\\\" target=_self href={{course.filePath}} download={{course.fileName}} title=\\\"Download Course Info\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-download\\\" aria-hidden=true></i></a></div></div><div class=\\\"panel-footer container-fluid\\\"><div class=row><div class=\\\"col-md-4 col-xs-4\\\"><button type=button class=\\\"btn btn-default btn-circle\\\" title=Instructors uib-popover-template=\\\"\\'instructorPopuptpl.html\\'\\\" popover-trigger=mouseenter popover-title=Instructors ng-if=course.instructors><i class=\\\"fa fa-user\\\" aria-hidden=true></i><!--  Instructor --></button> <button type=button class=\\\"btn btn-default btn-circle\\\" title=Demo ng-if=course.demoVideo ng-click=vm.showCourseDemo(course)><i class=\\\"fa fa-film\\\" aria-hidden=true></i><!--  Demo --></button></div><div class=\\\"col-md-8 col-xs-8 text-right\\\" ng-if=!course.isSubscribed><button type=button class=\\\"btn btn-default btn-sm\\\" ng-click=vm.subscribeCourse(course)><i class=\\\"fa fa-credit-card\\\" aria-hidden=true ng-if=course.subscriptionFee></i> Subscribe Now <span ng-if=course.subscriptionFee>@ </span><i class=\\\"fa fa-inr\\\" aria-hidden=true ng-if=course.subscriptionFee></i> <span ng-bind=course.subscriptionFee></span></button></div><div class=\\\"col-md-8 col-xs-8 text-right\\\" ng-if=course.isSubscribed><button type=button class=\\\"btn btn-default btn-sm\\\" ng-click=vm.selectCourse(course)><i class=\\\"fa fa-play\\\" aria-hidden=true></i> Start Now</button></div></div></div><script type=text/ng-template id=instructorPopuptpl.html><div>\\r\\n                        <div ng-repeat=\\\"instructor in course.instructors\\\" ng-bind=\\\"instructor.fullName\\\"></div>\\r\\n                    </div></script></div></div></div></div>\");\n$templateCache.put(\"app/partical/myCourses.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-4 ng-repeat=\\\"course in vm.courses\\\"><div class=panel ng-style=\\\"{\\'border-color\\': course.color_code || \\'#337AB7\\'}\\\"><div class=panel-heading ng-bind=course.name ng-style=\\\"{\\'border-color\\': course.color_code || \\'#337AB7\\', \\'background-color\\': course.color_code || \\'#337AB7\\'}\\\"></div><div class=\\\"panel-body body-fixed-height\\\" ng-bind-html=course.shortDescription style=height:150px></div><div class=\\\"panel-footer container-fluid\\\"><div class=row><div class=\\\"col-md-12 text-right\\\"><button type=button class=\\\"btn btn-default btn-sm\\\" ng-click=vm.selectCourse(course)><i class=\\\"fa fa-play\\\" aria-hidden=true></i> Start Now</button></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/partical/myLessons.html\",\"<div class=container-fluid ng-cloak><div class=row style=height:80%;overflow-y:auto><div class=col-md-3><div class=\\\"panel panel-info\\\" ng-repeat=\\\"unit in vm.units\\\" style=margin-bottom:4px><div class=panel-heading><b ng-bind=unit.name style=margin-left:-4px></b></div><div class=list-group><a class=list-group-item href=javascript:void(0); ng-repeat=\\\"lesson in unit.lessons\\\" ng-click=vm.selectLesson(lesson) ng-bind=lesson.name style=padding-left:20px></a></div></div></div><div class=col-md-9><div class=\\\"panel panel-default\\\"><div class=panel-heading><h2 ng-bind=vm.lesson.name style=\\\"margin:0px 0px 4px\\\"></h2></div><div class=\\\"embed-responsive embed-responsive-16by9\\\" ng-if=vm.lesson.options><jwplayerjs player-id=videoPlayer setup=vm.lesson.options></jwplayerjs></div><div class=panel-footer><div ng-bind-html=vm.lesson.description></div><div ng-if=vm.lesson.files><span>Related files: </span><span><span ng-repeat=\\\"file in vm.lesson.files\\\"><a target=_self href={{file.filePath}} download={{file.fileName}} title=\\\"Download file\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-file-pdf-o\\\" aria-hidden=true></i> <span ng-bind=file.fileName></span></a></span></span></div></div></div><div class=row ng-if=vm.lesson.isCommentingAllowed><div class=col-md-10><textarea rows=3 style=width:96% ng-model=vm.commentMsg></textarea></div><div class=col-md-2><button type=button class=\\\"btn btn-default\\\" ng-click=vm.commentOnLesson()>Send</button></div></div><div class=row ng-if=vm.lesson.isCommentingAllowed><div class=col-md-12><div class=media ng-repeat=\\\"comment in vm.lesson.comments\\\"><div class=media-left><a href=#><img class=media-object ng-src=\\\"{{comment.commentedBy.profilePhoto || \\'assets/images/defaultProfileImg.png\\'}}\\\" alt=... style=height:45px></a></div><div class=\\\"media-body well well-sm\\\"><div class=media-heading><h4 ng-bind=comment.commentedBy.fullName style=margin:0px></h4><span style=\\\"font-size: smaller\\\" ng-bind=\\\"comment.timestamp | date: format: medium\\\"></span></div><p ng-bind=comment.comments></p></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/partical/profile.html\",\"<div class=container-fluid ng-cloak><div class=row style=margin-bottom:20px><div class=col-md-3><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=center-block style=\\\"height:150px; width:150px\\\"><img style=width:150px class=\\\"img-rounded center-block\\\" ng-if=vm.user.profilePhoto> <img ngf-src=\\\"vm.user.profilePhoto || \\'assets/images/defaultProfileImg.png\\'\\\" ngf-resize=\\\"{width: 150, height: 150, quality: 0.9}\\\" style=\\\"border:1px solid lightseagreen; height:150px\\\"></div><br><button class=\\\"btn btn-default center-block\\\" ngf-select type=file ng-model=vm.user.profilePhoto name=file ngf-pattern=\\\"\\'image/*\\'\\\" ngf-accept=\\\"\\'image/*\\'\\\" ngf-max-size=20MB>Change Photo</button></div></div></div><div class=col-md-6 style=\\\"border-right:1px solid #e7e7e7;border-left:1px solid #e7e7e7\\\"><form><div class=form-group><label for=profile.name>Full Name</label><input type=text class=form-control id=profile.name placeholder=\\\"Full Name\\\" ng-model=vm.user.fullName></div><div class=form-group><label for=profile.email>Email</label><p class=form-control-static ng-bind=vm.user.email ng-if=\\\"vm.objMode == \\'update\\'\\\"></p><input type=email class=form-control id=profile.email placeholder=Email ng-model=vm.user.email ng-if=\\\"vm.objMode != \\'update\\'\\\"></div><div class=form-group><label for=profile.phone>Phone</label><p class=form-control-static ng-bind=vm.user.phone ng-if=\\\"vm.objMode == \\'update\\'\\\"></p><input type=text class=form-control id=profile.phone placeholder=Phone ng-model=vm.user.phone ng-if=\\\"vm.objMode != \\'update\\'\\\"></div><div class=form-group ng-if=\\\"vm.objMode == \\'insert\\'\\\"><label for=profile.password>Password</label><input type=text class=form-control id=profile.password placeholder=Password ng-model=vm.user.password></div><div class=form-group><label for=profile.about>About you</label><textarea class=form-control id=profile.about rows=5 placeholder=\\\"About you\\\" ng-model=vm.user.about>\\r\\n                    </textarea></div><div class=form-group><label for=profile.billingAddress>Billing Address</label><textarea class=form-control id=profile.billingAddress rows=5 placeholder=Address ng-model=vm.user.billingAddress>\\r\\n                    </textarea></div><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateProfile(vm.user.profilePhoto);><span ng-if=\\\"vm.objMode != \\'insert\\'\\\">Update</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save</span></button></form></div><div class=col-md-3 ng-if=false><div ng-click=\\\"vm.user.changePassword=!vm.user.changePassword\\\">Change User Password</div><div ng-show=vm.user.changePassword><div class=form-group><label for=profile.password>Password</label><input type=password class=form-control id=profile.password placeholder=Password ng-model=vm.user.password></div><div class=form-group><label for=profile.cornfirmPassword>Confirm Password</label><input type=password class=form-control id=profile.confirmPassword placeholder=\\\"Confirm Password\\\" ng-model=vm.user.confirmPassword></div></div></div></div></div>\");\n$templateCache.put(\"app/partical/showCourseInfo.html\",\"<style>.accordion-toggle a:link, a:hover, a:visited, a:active {\\r\\n    text-decoration: none;\\r\\n}</style><div class=container-fluid ng-cloak><div class=modal-header><button type=button class=close aria-label=Close ng-click=$close();><span aria-hidden=true>&times;</span></button><h3 class=modal-title ng-bind=course.courseName></h3></div><div class=modal-body><div ng-bind-html=course.courseDesc></div><uib-accordion close-others=false><uib-accordion-group is-open=unit.isopen ng-repeat=\\\"unit in course.units\\\"><uib-accordion-heading ng-click=\\\"unit.isopen = !unit.isopen\\\"><div ng-bind=unit.name></div></uib-accordion-heading><ul class=list-group><li class=list-group-item ng-repeat=\\\"lesson in unit.lessons\\\"><h5 ng-bind=lesson.name></h5><p ng-bind-html=lesson.description></p></li></ul></uib-accordion-group></uib-accordion></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=$close();>OK</button></div></div>\");\n$templateCache.put(\"app/partical/showDemo.html\",\"<div class=container-fluid ng-cloak><div class=modal-header><button type=button class=close aria-label=Close ng-click=$close();><span aria-hidden=true>&times;</span></button><h3 ng-bind=course.name></h3></div><div class=modal-body><div class=\\\"embed-responsive embed-responsive-16by9\\\"><jwplayerjs setup=options></jwplayerjs></div></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=$close();>OK</button></div></div>\");\n$templateCache.put(\"app/partical/units.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-4 ng-repeat=\\\"unit in vm.units\\\"><div class=\\\"panel panel-primary\\\" ng-click=vm.getLessons(unit.id) ui-sref=main.lessons><div class=panel-heading ng-bind=unit.name></div><div class=panel-body ng-bind=unit.description style=height:150px></div></div></div></div></div>\");\n$templateCache.put(\"app/partical/users.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><form class=\\\"form-inline pull-left\\\" role=search><div class=input-group><input type=text class=form-control placeholder=Search... ng-model=vm.searchText ng-keyup=\\\"($event.which === 13 || !vm.searchText) && vm.getUsers(vm.userType, 1);\\\"> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button ng-click=\\\"vm.getUsers(vm.userType, 1);\\\">Go!</button></span></div></form><div class=pull-right><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"vm.editUser(\\'insert\\')\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=true></i> New User</button><!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"vm.editBatch(\\'insert\\')\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New Batch\\r\\n                        </button> --></div><div class=clearfix></div></div><!-- <uib-tabset active=\\\"vm.selectedTab\\\" type=\\\"pills\\\" justified=\\\"true\\\">\\r\\n                    <uib-tab index=\\\"0\\\" heading=\\\"Students\\\" select=\\\"vm.selectedTab=0;\\\" style=\\\"border:1px solid #ddd;border-radius:4px;\\\"> --><div class=table-responsive><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.usersRecordCount></span></div><div class=pull-left style=\\\"margin:9px 12px\\\" ng-if=vm.isUserSelected>Selected: <span ng-bind=vm.selectedUserGrid.length></span></div><div class=pull-right style=\\\"margin:4px 2px\\\" ng-if=vm.isUserSelected><!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search courses by name..\\\" ng-model=\\\"vm.searchText\\\" /> --><!-- <select class=\\\"form-control\\\" ng-options=\\\"course.id as course.name for course in vm.coursesNameList\\\" ng-model=\\\"vm.selectedCourse\\\">\\r\\n                                        <option value=\\\"\\\"> Select a Course </option>\\r\\n                                    </select>\\r\\n                                    <span class=\\\"input-group-btn\\\">\\r\\n                                      <button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.addStudentToCourse();\\\">Add to course</button>\\r\\n                                    </span> --><div class=btn-group uib-dropdown dropdown-append-to-body=true><button id=courseList type=button class=\\\"btn btn-default\\\" uib-dropdown-toggle>Add to courses <span class=caret></span></button><ul class=dropdown-menu-right uib-dropdown-menu role=menu aria-labelledby=courseList><li role=menuitem ng-click=vm.addStudentToCourse(course.id); ng-repeat=\\\"course in vm.coursesNameList\\\"><a href=javascript:void(0); ng-bind=course.name></a></li></ul></div><div class=btn-group uib-dropdown dropdown-append-to-body=true><button id=testSeriesList type=button class=\\\"btn btn-default\\\" uib-dropdown-toggle>Add to test series <span class=caret></span></button><ul class=dropdown-menu-right uib-dropdown-menu role=menu aria-labelledby=testSeriesList><li role=menuitem ng-click=vm.addStudentToTestSeries(testSeries.id); ng-repeat=\\\"testSeries in vm.testSeriesList\\\"><a href=javascript:void(0); ng-bind=testSeries.name></a></li></ul></div></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\" ng-if=!vm.isUserSelected><li><a href=javascript:void(0); aria-label=Previous ng-click=\\\"vm.getUsers(vm.userType, 1)\\\"><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.usersCurrentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.usersCurrentPage != 1 && vm.getUsers(vm.userType, vm.usersCurrentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.usersCurrentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.usersCurrentPage == vm.usersLastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.usersCurrentPage != vm.usersLastPage && vm.getUsers(vm.userType, vm.usersCurrentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=\\\"vm.getUsers(vm.userType, vm.usersLastPage)\\\"><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey\\\"><thead><tr class=success><th ng-if=\\\"vm.userType==\\'student\\'\\\"><input type=checkbox ng-click=vm.selectedAllStudents(); ng-model=vm.isAllUserSelected></th><th>Roll No.</th><th>Name</th><th>Phone</th><th>Email</th><th>Date</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"user in vm.users\\\"><td ng-if=\\\"vm.userType==\\'student\\'\\\"><input type=checkbox ng-model=user.isSelected ng-click=vm.userSelection();></td><th scope=row ng-bind=user.id></th><td ng-bind=user.fullName></td><td ng-bind=user.phone></td><td ng-bind=user.email></td><td ng-bind=\\\"user.joinDate | date : \\'medium\\'\\\"></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=vm.getUserById(user.id) style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteUser(user)></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" aria-hidden=true ng-if=\\\"user.status == \\'pending\\'\\\" ng-click=vm.approveUser(user);></i></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=\\\"vm.getUsers(vm.userType, 1)\\\"><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.usersCurrentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.usersCurrentPage != 1 && vm.getUsers(vm.userType, vm.usersCurrentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.usersCurrentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.usersCurrentPage == vm.usersLastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.usersCurrentPage != vm.usersLastPage && vm.getUsers(vm.userType, vm.usersCurrentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=\\\"vm.getUsers(vm.userType, vm.usersLastPage)\\\"><span aria-hidden=true>&raquo;</span></a></li></ul></nav></div><!-- </uib-tab>\\r\\n                    <uib-tab index=\\\"1\\\" heading=\\\"Batches\\\" select=\\\"vm.getAllBatches();vm.selectedTab=0;\\\" style=\\\"border:1px solid #ddd;border-radius:4px;\\\">\\r\\n                        <table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;\\\">\\r\\n                            <thead>\\r\\n                                <tr class=\\\"success\\\">\\r\\n                                    <th>#</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Description</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr ng-repeat=\\\"batch in vm.batches\\\">\\r\\n                                    <th scope=\\\"row\\\" ng-bind=\\\"$index + 1\\\"></th>\\r\\n                                    <td ng-bind=\\\"batch.name\\\"></td>\\r\\n                                    <td ng-bind=\\\"batch.description\\\"></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </uib-tab>\\r\\n                </uib-tabset> --></div></div></div></div>\");\n$templateCache.put(\"app/test/addOfflineScores.html\",\"<div class=container-fluid ng-cloak><div class=modal-header><button type=button class=close aria-label=Close ng-click=$close();><span aria-hidden=true>&times;</span></button><h3>Offline Scores</h3></div><div class=modal-body><table class=\\\"table table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>#</th><th>Name</th><th>Total Questions</th><th>Correct</th><th>Incorrect</th><th>Score</th></tr></thead><tbody><tr ng-repeat=\\\"user in users\\\"><td ng-bind=\\\"$index + 1\\\"></td><td ng-bind-html=user.fullName></td><td ng-bind-html=user.totalQuestions></td><td ng-bind-html=user.correctAnswers></td><td ng-bind-html=user.incorrectAnswers></td><td ng-bind-html=user.score></td></tr></tbody></table></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=ok();$close();>OK</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$close();>Cancel</button></div></div>\");\n$templateCache.put(\"app/test/editQuestion.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=question.type>Type</label><select class=form-control ng-options=\\\"type for type in vm.questionType\\\" ng-model=vm.question.type><option value=\\\"\\\">Choose</option></select></div></div><div class=col-md-6><div class=form-group><label for=question.subject>Subject</label><select class=form-control ng-options=\\\"subject.id as subject.name for subject in vm.subjectList\\\" ng-model=vm.question.subjectId><option value=\\\"\\\">Choose</option></select></div></div></div><div class=row><div class=col-md-12><div class=form-group><label for=question.question>Question</label><text-angular class=test-questions ta-toolbar=vm.toolBar id=question.question placeholder=Question ng-model=vm.question.question></text-angular></div></div></div><div ng-if=\\\"vm.question.type==\\'MCQ\\'\\\"><table class=\\\"table table-striped\\\"><thead><tr><th>#</th><th>Option</th><th>Is Correct</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\\\"answer in vm.question.answers | orderBy: \\'ansKey\\' | filter: { isDeleted: 0 }\\\" ng-init=\\\"answer.ansKey = vm.keyCode[$index]\\\"><td scope=row ng-bind=vm.keyCode[$index]></td><td><text-angular class=test-answer-options ta-toolbar=vm.toolBar placeholder=\\\"Answer option\\\" ng-model=answer.answerText></text-angular></td><td><div class=radio><label><input type=radio name=answerOption ng-model=vm.question.correctAnswer ng-value=vm.keyCode[$index]></label></div></td><td><i class=\\\"fa fa-trash-o\\\" aria-hidden=true ng-click=\\\"answer.isDeleted = 1\\\"></i> <i class=\\\"fa fa-plus-square-o\\\" aria-hidden=true ng-if=$last ng-click=\\\"vm.question.answers.push({answerText: \\'\\', isDeleted: 0})\\\"></i></td></tr></tbody></table></div><div class=row ng-if=\\\"vm.question.type==\\'Passage\\'\\\"><table class=table>Child Question For Passage<thead><tr><th>#</th><th>Questions</th><th>Action</th></tr></thead><tbody><tr class=bg-success ng-repeat-start=\\\"childQuestion in vm.question.childQuestions | filter: { isDeleted: 0 }\\\" ng-init=\\\"questionIndex = $index\\\"><td colspan=2>Question <span ng-bind=\\\"$index + 1\\\"></span></td><td><i class=\\\"fa fa-trash-o\\\" ng-click=\\\"childQuestion.isDeleted = 1\\\" aria-hidden=true></i> <i class=\\\"fa fa-plus-square-o\\\" aria-hidden=true ng-if=$last ng-click=vm.addChildQuestion()></i></td></tr><tr ng-repeat-end><td scope=row ng-bind=\\\"$index + 1\\\"></td><td><text-angular class=test-answer-options ta-toolbar=vm.toolBar placeholder=Question ng-model=childQuestion.question></text-angular><table class=table><thead><tr><th>#</th><th>Option</th><th>Is Correct</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\\\"answer in childQuestion.answers | filter: { isDeleted: 0 }\\\" ng-init=\\\"answer.ansKey = vm.keyCode[$index]\\\"><td scope=row ng-bind=vm.keyCode[$index]></td><td><text-angular class=test-answer-options ta-toolbar=vm.toolBar placeholder=\\\"Answer option\\\" ng-model=answer.answerText></text-angular></td><td><div class=radio><label><input type=radio name=answerOption_{{questionIndex}} ng-model=childQuestion.correctAnswer ng-value=vm.keyCode[$index]></label></div></td><td><i class=\\\"fa fa-trash-o\\\" aria-hidden=true ng-click=\\\"answer.isDeleted = 1\\\"></i> <i class=\\\"fa fa-plus-square-o\\\" aria-hidden=true ng-if=$last ng-click=\\\"childQuestion.answers.push({answerText: \\'\\', isDeleted: 0})\\\"></i></td></tr></tbody></table><div class=form-group><label for=question.question>Explanation</label><text-angular class=test-answer-options ta-toolbar=vm.toolBar placeholder=Explanation ng-model=childQuestion.explanation></text-angular></div></td><td></td></tr></tbody></table></div><div class=row ng-if=\\\"vm.question.type==\\'MCQ\\'\\\"><div class=col-md-12><div class=form-group><label for=question.question>Explanation</label><text-angular class=test-answer-options ta-toolbar=vm.toolBar placeholder=Explanation ng-model=vm.question.explanation></text-angular></div></div></div><div class=row><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateQuestion(false)><span ng-if=\\\"vm.objMode == \\'edit\\'\\\">Update</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save</span></button> <button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateQuestion(true)><span ng-if=\\\"vm.objMode == \\'edit\\'\\\">Update And New</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save And New</span></button></div></div></form></div>\");\n$templateCache.put(\"app/test/editTest.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=test.title>Title</label><input type=text class=form-control id=test.title placeholder=\\\"Test Title\\\" ng-model=vm.test.title></div></div><div class=col-md-6><div class=form-group><label for=test.duration>Duration(in hours)</label><input type=text class=form-control id=test.duration placeholder=Duration ng-model=vm.test.duration></div></div></div><div class=row><div class=col-md-6><div class=row><div class=\\\"form-group col-md-6\\\"><label for=test.startDate>Start Date</label><p class=input-group><input type=text class=form-control uib-datepicker-popup={{vm.format}} ng-model=vm.test.startDate is-open=popup1.opened datepicker-options=vm.dateOptions close-text=Close><!-- <input date-range-picker class=\\\"form-control date-picker\\\" type=\\\"text\\\" ng-model=\\\"vm.test\\\" /> --> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"popup1.opened = true\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i></button></span></p></div><div class=\\\"form-group col-md-6\\\"><label for=test.endDate>End Date</label><p class=input-group><input type=text class=form-control uib-datepicker-popup={{vm.format}} ng-model=vm.test.endDate is-open=popup2.opened datepicker-options=vm.dateOptions close-text=Close> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"popup2.opened = true\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i></button></span></p></div></div></div><div class=col-md-6><div class=row><div class=\\\"form-group col-md-6\\\"><label for=test.marksPerQues>Marks Per Question</label><input type=text class=form-control id=test.marksPerQues placeholder=Marks ng-model=vm.test.marksPerQues></div><div class=\\\"form-group col-md-6\\\"><label for=test.negativeMarks>Negative Marks</label><input type=text class=form-control id=test.negativeMarks placeholder=\\\"Negative Marks\\\" ng-model=vm.test.negativeMarks></div></div></div></div><div class=row><div class=col-md-6><div class=row><div class=col-md-6><div class=form-group><label for=test.video>Instant To Students</label><div class=form-group><label class=checkbox-inline><input type=checkbox ng-model=vm.test.instantResult> Result</label><label class=checkbox-inline><input type=checkbox ng-model=vm.test.instantRank> Rank</label></div></div></div><div class=col-md-6><div class=form-group><label for=test.file>File</label><input type=text class=form-control id=test.file placeholder=\\\"File Link\\\" ng-model=vm.test.file></div></div></div></div><div class=col-md-6><div class=form-group><label for=test.questionPaper>Question Paper</label><select class=form-control ng-options=\\\"questionPaper.id as questionPaper.name for questionPaper in vm.questionPapers\\\" ng-model=vm.test.questionPaperId><option value=\\\"\\\">Choose</option></select></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=test.attachment>Link</label><input type=text class=form-control id=test.attachment placeholder=\\\"Attachment Link\\\" ng-model=vm.test.attachment[0]></div></div><div class=col-md-6><div class=form-group><label for=test.attachment>link</label><input type=text class=form-control id=test.attachment placeholder=\\\"Attachment Link\\\" ng-model=vm.test.attachment[1]></div></div></div><div class=row><div class=col-md-12><text-angular ta-toolbar=vm.toolBar id=test.description placeholder=Instruction ng-model=vm.test.instruction></text-angular></div></div><div class=row><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateTest()><span ng-if=\\\"vm.objMode == \\'edit\\'\\\">Update</span> <span ng-if=\\\"vm.objMode == \\'insert\\'\\\">Save</span></button></div></div></form></div>\");\n$templateCache.put(\"app/test/editTestSeries.html\",\"<div class=container-fluid ng-cloak><form><div class=row><div class=col-md-6><div class=form-group><label for=testSeries.name>Series Name</label><input type=text class=form-control id=testSeries.name placeholder=\\\"Series Name\\\" ng-model=vm.testSeries.name></div></div><div class=\\\"col-md-6 row\\\"><div class=form-group><label for=testSeries.description>Description</label><input type=text class=form-control id=testSeries.description placeholder=\\\"Series Description\\\" ng-model=vm.testSeries.description></div></div></div><div class=row><div class=col-md-6><div class=form-group><label for=testSeries.plan>Test Plan</label><input type=text class=form-control id=testSeries.plan placeholder=\\\"Test Plan link\\\" ng-model=vm.testSeries.testPlan></div></div><!-- <div class=\\\"col-md-6 row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"testSeries.description\\\">Description</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testSeries.description\\\" placeholder=\\\"Series Description\\\" ng-model=\\\"vm.testSeries.description\\\" />\\r\\n                </div>\\r\\n            </div> --></div><div class=col-md-12><button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.addTestSeries(); ng-if=\\\"vm.objMode == \\'insert\\'\\\"><span>Save</span></button> <button type=button class=\\\"btn btn-default pull-right\\\" ng-click=vm.updateTestSeries(); ng-if=\\\"vm.objMode == \\'edit\\'\\\"><span>Update</span></button></div></form></div>\");\n$templateCache.put(\"app/test/exam.html\",\"<div class=container-fluid ng-cloak confirm-on-exit><div class=row ng-if=!vm.isExamStarted><div class=\\\"col-md-10 col-md-offset-1\\\"><div ng-bind-html=vm.exam.instruction instruction-board style=overflow:auto></div></div><div class=\\\"col-md-4 col-md-offset-4 col-xs-12 col-sm-12\\\" ng-if=vm.showLangChoice><div class=\\\"form-group text-center\\\"><label>Select Your Language</label><br><label class=radio-inline><input type=radio name=languageSelection ng-model=vm.selectedLang value=1> English</label><label class=radio-inline><input type=radio name=languageSelection ng-model=vm.selectedLang value=2> Hindi</label></div></div><div class=col-md-12><button type=button class=\\\"btn btn-primary btn-lg center-block\\\" ng-click=vm.startExam(); ng-disabled=\\\"!vm.userCurrentQuestion || vm.userCurrentQuestion.length == 0 || !vm.selectedLang\\\">Start Exam</button></div></div><div class=row ng-if=\\\"vm.isExamStarted && !vm.isExamEnded\\\"><div class=col-md-10><div class=\\\"well well-sm row\\\" style=margin-bottom:10px><div class=col-md-4><h3 style=\\\"margin:3px 0px\\\">Question: <span ng-bind=vm.currentQuestionIndex></span></h3></div><div class=col-md-8><span class=\\\"pull-right navigation-btn\\\"><button type=button class=\\\"btn btn-primary\\\" style=width:110px title=\\\"Unanswer this question\\\" ng-click=\\\"vm.userCurrentQuestion[vm.currentIndex].answer = \\'\\';\\\" ng-disabled=!vm.userCurrentQuestion[vm.currentIndex].answer style=\\\"margin:4px 0px\\\"><i class=\\\"fa fa-flag\\\" aria-hidden=true></i> Unanswer</button> <button type=button class=\\\"btn btn-primary\\\" style=width:110px title=\\\"Mark this question for later review\\\" ng-click=\\\"vm.userCurrentQuestion[vm.currentIndex].isMarked = !vm.userCurrentQuestion[vm.currentIndex].isMarked;\\\"><i class=\\\"fa fa-flag\\\" aria-hidden=true></i> Mark Flag</button> <button type=button class=\\\"btn btn-primary\\\" style=width:110px title=\\\"Previous Question\\\" ng-click=vm.showQuestion(vm.currentIndex-1); ng-disabled=\\\"vm.currentIndex==0\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=true></i> Previous</button> <button type=button class=\\\"btn btn-primary\\\" style=width:110px title=\\\"Next Question\\\" ng-click=vm.showQuestion(vm.currentIndex+1); ng-disabled=\\\"vm.currentIndex==vm.exam.questions.length-1\\\">Next <i class=\\\"fa fa-arrow-right\\\" aria-hidden=true></i></button></span></div></div><div question-area style=overflow:auto;margin-right:-13px><div ng-bind-html=vm.currentQuestion.passage></div><div ng-bind-html=vm.currentQuestion.question ng-if=\\\"vm.selectedLang == 1\\\"></div><div ng-bind-html=vm.currentQuestion.questionText ng-if=\\\"vm.selectedLang == 2\\\"></div><!-- <ul class=\\\"list-group\\\">\\r\\n                    <li class=\\\"list-group-item\\\" ng-repeat=\\\"answer in vm.currentQuestion.answers | orderBy: \\'ansKey\\'\\\">\\r\\n                        <label style=\\\"margin-bottom:0px;\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"answerOptions\\\" ng-model=\\\"vm.userCurrentQuestion[vm.currentIndex].answer\\\" ng-value=\\\"answer.ansKey\\\" ng-click=\\\"vm.saveLocal();\\\" /> <span ng-bind-html=\\\"answer.answerText\\\" class=\\\"options-review\\\" style=\\\"display:inline-block;\\\"></span>\\r\\n                        </label>\\r\\n                    </li>\\r\\n                </ul> --><div class=\\\"btn-group-vertical ans-options\\\" role=group style=width:98%><label class=\\\"btn btn-default\\\" ng-model=vm.userCurrentQuestion[vm.currentIndex].answer uib-btn-radio=answer.ansKey ng-repeat=\\\"answer in vm.currentQuestion.answers | orderBy: \\'ansKey\\'\\\" style=text-align:left><span ng-bind=\\\"($index + 97) | charCodeToChar\\\" class=options-review></span>) <span ng-bind-html=answer.answerText class=options-review style=display:inline-block;white-space:pre-wrap ng-if=\\\"vm.selectedLang == 1\\\"></span> <span ng-bind-html=answer.ansText class=options-review style=display:inline-block;white-space:pre-wrap ng-if=\\\"vm.selectedLang == 2\\\"></span></label></div></div></div><div class=col-md-2><div style=overflow:auto><div class=\\\"panel panel-default\\\" style=margin-bottom:0px><div class=panel-heading><div style=font-size:xx-large;display:flex;justify-content:center><timer countdown=vm.timer interval=1000>{{hhours}}:{{mminutes}}:{{sseconds}}</timer></div></div><div class=panel-body navigation-area style=overflow:auto;min-height:120px;padding:12px><!-- <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-2\\\" ng-repeat=\\\"question in vm.exam.questions\\\"> --> <span ng-repeat=\\\"question in vm.exam.questions\\\"><button type=button class=\\\"btn btn-circle\\\" ng-class=\\\"{\\'btn-default\\': !vm.userCurrentQuestion[$index].answer, \\'btn-success\\': vm.userCurrentQuestion[$index].answer, \\'btn-warning\\': vm.userCurrentQuestion[$index].isMarked}\\\" ng-click=vm.showQuestion($index);><span ng-bind=\\\"$index + 1\\\"></span></button> </span><!-- </div>\\r\\n                        </div> --></div><div class=panel-footer style=display:flex;justify-content:center><button type=button class=\\\"btn btn-primary btn-lg\\\" style=left:108px ng-click=vm.submitExam(false);>Submit Exam</button></div></div></div></div></div></div>\");\n$templateCache.put(\"app/test/examsList.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey\\\"><thead><tr class=success><th>S No.</th><th>Exam Title</th><th>Durations(in hours)</th><th>Starting On</th><th>Syllabus</th><!-- <th>Questions</th> --><th>Score</th><!-- <th>Rank</th> --><th>Percentile</th><th>Files</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"exam in vm.exams\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=exam.title></td><td ng-bind=exam.durationInHrs></td><td ng-bind=\\\"exam.startDate | date : \\'fullDate\\'\\\"></td><td><!-- <a target=\\\"_self\\\" href=\\\"{{exam.file}}\\\" download=\\\"file\\\" ng-if=\\\"exam.file\\\" title=\\\"Download Test Syllabus\\\" class=\\\"btn btn-default btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-files-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </a> --> <a target=_self href={{exam.file}} download=file ng-if=exam.file><i class=\\\"fa fa-files-o fa-fw\\\" aria-hidden=true></i></a></td><!-- <td ng-bind=\\\"exam.questionCount\\\"></td> --><td ng-bind=exam.score></td><!-- <td ng-bind=\\\"exam.rank\\\"></td> --><td ng-bind=exam.percentile></td><td><div ng-if=\\\"exam.status==\\'evaluated\\' && exam.attachment.length > 0\\\"><a target=_self href={{exam.attachment[0]}} download=file ng-if=exam.attachment[0]><i class=\\\"fa fa-files-o fa-fw\\\" aria-hidden=true></i> </a><a target=_self href={{exam.attachment[1]}} download=file ng-if=exam.attachment[1]><i class=\\\"fa fa-files-o fa-fw\\\" aria-hidden=true></i></a></div></td><td><button type=button class=\\\"btn btn-primary btn-xs\\\" ng-disabled=true ng-if=exam.isUpcoming><i class=\\\"fa fa-info fa-fw\\\" aria-hidden=true></i> Upcoming</button> <button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.startExam(exam) ng-if=\\\"!exam.status && !exam.isUpcoming\\\"><i class=\\\"fa fa-play fa-fw\\\" aria-hidden=true></i> Start Exam</button> <button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.startExam(exam) ng-if=\\\"exam.status == \\'pending\\'\\\"><i class=\\\"fa fa-repeat fa-fw\\\" aria-hidden=true></i> Resume Exam</button> <button type=button class=\\\"btn btn-primary btn-xs\\\" ng-disabled=true ng-if=\\\"exam.status==\\'completed\\'\\\"><i class=\\\"fa fa-info fa-fw\\\" aria-hidden=true></i> Waiting For evaluation</button> <button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.showAnswers(exam) ng-if=\\\"exam.status==\\'evaluated\\'\\\"><i class=\\\"fa fa-newspaper-o fa-fw\\\" aria-hidden=true></i> Review Result</button></td></tr></tbody></table></div></div></div></div>\");\n$templateCache.put(\"app/test/importQuestion.html\",\"<div class=container-fluid ng-cloak><div class=modal-header><button type=button class=close aria-label=Close ng-click=$close();><span aria-hidden=true>&times;</span></button><h3>Questions Imported</h3></div><div class=modal-body><table class=\\\"table table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>#</th><th>Question</th><th>Subject</th></tr></thead><tbody><tr ng-repeat-start=\\\"question in questions\\\"><td ng-bind=\\\"$index + 1\\\"></td><td ng-bind-html=question.question></td><td><select ng-options=\\\"subject.name as subject.name for subject in subjects\\\" ng-model=question.subject></select></td></tr><tr><td></td><td><div ng-repeat=\\\"answer in question.answers | orderBy: \\'ansKey\\'\\\"><span ng-bind=\\\"($index + 97) | charCodeToChar\\\"></span>) <span ng-bind-html=answer.answerText style=display:inline-block;white-space:pre-wrap></span></div></td><td ng-bind=question.correctAnswer></td></tr><tr><td></td><td><div><b>Explanation:</b></div><div ng-bind-html=question.explanation></div></td><td></td></tr><tr ng-if=question.questionText><td></td><td ng-bind-html=question.questionText></td><td></td></tr><tr ng-if=question.questionText><td></td><td><div ng-repeat=\\\"answer in question.answers | orderBy: \\'ansKey\\'\\\"><span ng-bind=\\\"($index + 97) | charCodeToChar\\\"></span>) <span ng-bind-html=answer.ansText style=display:inline-block;white-space:pre-wrap></span></div></td><td ng-bind=question.correctAnswer></td></tr><tr ng-if=question.questionText ng-repeat-end><td></td><td><div><b>Explanation:</b></div><div ng-bind-html=question.explanationText></div></td><td></td></tr></tbody></table></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=ok();$close();>OK</button> <button class=\\\"btn btn-primary\\\" type=button ng-click=$close();>Cancel</button></div></div>\");\n$templateCache.put(\"app/test/questionList.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.questionCount></span></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getAllQuestions(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != 1 && vm.getAllQuestions(vm.currentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == vm.lastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != vm.lastPage && vm.getAllQuestions(vm.currentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getAllQuestions(vm.lastPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-valign-middle\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th></th><th>Id</th><th>Question</th><th>Type</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"question in vm.questions\\\"><th scope=row><input type=checkbox ng-change=vm.questionSelection(); ng-model=question.isSelected></th><td ng-bind=question.id></td><td ng-bind=\\\"question.question | htmlToPlaintext\\\"></td><td ng-bind=question.type></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.getQuestionById(question.id); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteQuestion(question.id)></i></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getAllQuestions(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != 1 && vm.getAllQuestions(vm.currentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == vm.lastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != vm.lastPage && vm.getAllQuestions(vm.currentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getAllQuestions(vm.lastPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav></div></div></div></div>\");\n$templateCache.put(\"app/test/seriesStudent.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><form class=\\\"form-inline pull-left\\\" role=search><div class=input-group><input type=text class=form-control placeholder=Search... ng-model=vm.searchText ng-keyup=\\\"($event.which === 13 || !vm.searchText) && vm.searchStudent();\\\"> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button ng-click=vm.searchStudent();>Go!</button></span></div></form><div class=clearfix></div></div><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.studentsCount></span></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getSeriesStudent(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentStudentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentStudentPage != 1 && vm.getSeriesStudent(vm.currentStudentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentStudentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentStudentPage == vm.lastStudentPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentStudentPage != vm.lastStudentPage && vm.getSeriesStudent(vm.currentStudentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getSeriesStudent(vm.lastStudentPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>Roll No.</th><th>Name</th><th>Email</th><th>Phone</th><th>Mode</th></tr></thead><tbody><tr ng-repeat=\\\"user in vm.students\\\"><td ng-bind=user.id></td><td ng-bind=user.fullName></td><td ng-bind=user.email></td><td ng-bind=user.phone></td><td ng-bind=user.mode></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getSeriesStudent(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentStudentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentStudentPage != 1 && vm.getSeriesStudent(vm.currentStudentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentStudentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentStudentPage == vm.lastStudentPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentStudentPage != vm.lastStudentPage && vm.getSeriesStudent(vm.currentStudentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getSeriesStudent(vm.lastStudentPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav></div></div></div></div>\");\n$templateCache.put(\"app/test/test.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><span class=pull-right ng-if=\\\"!vm.isQuestionSelected && !vm.isTestSelected\\\" style=margin-right:35px><button type=button class=\\\"btn btn-default\\\"><i class=\\\"fa fa-star-half-o fa-lg fa-fw\\\" title=\\\"Question Difficulty Metrix\\\" aria-hidden=true ng-click=vm.difficultyMetrix()></i></button><div class=btn-group uib-dropdown dropdown-append-to-body=true><button id=single-button type=button class=\\\"btn btn-default\\\" uib-dropdown-toggle>Add New <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem><a href=javascript:void(0); ng-click=\\\"vm.editTestSeries(\\'insert\\');\\\">Test Series</a></li><li role=menuitem><a href=javascript:void(0); ng-click=\\\"vm.editTest(\\'insert\\');\\\">Test</a></li><li role=menuitem><a href=javascript:void(0); ng-click=\\\"vm.editQuestionPaper(\\'insert\\');\\\">Question Paper</a></li><li role=menuitem><a href=javascript:void(0) ng-click=vm.addSubject();>Subject</a></li><li role=menuitem><a href=javascript:void(0); ng-click=\\\"vm.editQuestion(\\'insert\\');\\\">Question</a></li></ul></div></span><span class=pull-right ng-if=vm.isQuestionSelected><div class=btn-group uib-dropdown dropdown-append-to-body=true><button id=questionPaperList type=button class=\\\"btn btn-default\\\" uib-dropdown-toggle>Add To Question Paper <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=questionPaperList><li role=menuitem ng-click=vm.addToPaper(quesPaper.id); ng-repeat=\\\"quesPaper in vm.questionPapers\\\"><a href=javascript:void(0); ng-bind=quesPaper.name></a></li></ul></div></span><span class=pull-right ng-if=vm.isTestSelected><div class=btn-group uib-dropdown dropdown-append-to-body=true><button id=testSeriesList type=button class=\\\"btn btn-default\\\" uib-dropdown-toggle>Add To Test Series <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=testSeriesList><li role=menuitem ng-click=vm.addToTestSeries(testSeries.id); ng-repeat=\\\"testSeries in vm.testSeriesList\\\"><a href=javascript:void(0); ng-bind=testSeries.name></a></li></ul></div></span><div class=clearfix></div></div><uib-tabset active=vm.selectedTab type=pills justified=true><uib-tab index=0 heading=\\\"Test Series\\\" select=vm.getAllTestSeries();vm.tabChange(0); style=\\\"border:1px solid #ddd;border-radius:4px\\\"><table class=\\\"table table-striped table-hover table-valign-middle\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>#</th><th>Title</th><th>Description</th><th>Tests</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\\\"testSeries in vm.testSeries\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=testSeries.name></td><td ng-bind=testSeries.description></td><td ng-bind=testSeries.testList></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.getTestSeriesById(testSeries.id); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" ng-style=\\\"testSeries.isPublished && {\\'color\\' :\\'green\\' }\\\" title=Publish aria-hidden=true ng-click=vm.publishTestSeries(testSeries)></i> <i class=\\\"fa fa-users fa-lg fa-fw\\\" aria-hidden=true title=\\\"Show User\\\" ng-click=vm.getTestSeriesUsers(testSeries);></i></td></tr></tbody></table></uib-tab><uib-tab index=1 heading=Test select=vm.getAllTests();vm.tabChange(1); style=\\\"border:1px solid #ddd;border-radius:4px\\\"><table class=\\\"table table-striped table-hover table-valign-middle\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th><input type=checkbox ng-click=vm.selectAllTest(); ng-model=vm.isAllTestSelected></th><th>#</th><th>Title</th><th>Durations</th><th>Start Date</th><th>End Date</th><th>Question Paper</th><th>Students</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"test in vm.tests\\\"><td><input type=checkbox ng-model=test.isSelected ng-click=vm.testSelection();></td><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=test.title></td><td ng-bind=test.durationInHrs></td><td ng-bind=\\\"test.startDate | date : \\'fullDate\\'\\\"></td><td ng-bind=\\\"test.endDate | date : \\'fullDate\\'\\\"></td><td ng-bind=test.questionPaperName></td><td ng-bind=test.userCount></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.getTestById(test.id); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteTest(test.id)></i> <i class=\\\"fa fa-users fa-lg fa-fw\\\" aria-hidden=true ng-if=test.userCount title=\\\"Show User\\\" ng-click=vm.getTestUsers(test);></i> <i class=\\\"fa fa-users fa-lg fa-fw\\\" aria-hidden=true ng-if=test.userCount title=\\\"Export User\\\" ng-click=vm.exportTestUsers(test);></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" title=\\\"Recheck paper\\\" ng-if=test.userCount aria-hidden=true ng-click=vm.recheck(test.id) style=color:blue></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" title=Evaluate ng-if=test.userCount aria-hidden=true ng-click=vm.evaluation(test.id)></i> <i class=\\\"fa fa-check-square-o fa-lg fa-fw\\\" title=Re-Evaluate ng-if=test.userCount aria-hidden=true ng-click=vm.evaluationAll(test.id) style=color:red></i> <i class=\\\"fa fa-upload fa-lg fa-fw\\\" title=\\\"Upload Offline Score\\\" style=cursor:pointer aria-hidden=true ngf-select=\\\"vm.offlineScore($file, test.id)\\\" ng-model=vm.tests.offLineScoreFile name=file ngf-pattern=\\\"\\'.xlsx\\'\\\" ngf-accept=\\\"\\'.xlsx\\'\\\" ngf-max-size=20MB></i> <i class=\\\"fa fa-trash fa-lg fa-fw\\\" title=\\\"Remove All offline Scores\\\" aria-hidden=true ng-click=vm.removeAllOfflineSores(test.id) style=color:red></i> <i class=\\\"fa fa-search fa-lg fa-fw\\\" title=Preview aria-hidden=true ng-click=vm.showTestPreview(test)></i></td></tr></tbody></table></uib-tab><uib-tab index=2 heading=\\\"Question Paper\\\" select=vm.getAllquestionPapers();vm.tabChange(2); style=\\\"border:1px solid #ddd;border-radius:4px\\\"><table class=\\\"table table-striped table-hover table-valign-middle\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>#</th><th>Name</th><th>No. Of Questions</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"quesPaper in vm.questionPapers\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=quesPaper.name ng-click=vm.showQuestions(quesPaper);></td><td ng-bind=quesPaper.questionCount></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.editQuestionPaper(\\'edit\\', quesPaper); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteQuestionPaper(quesPaper.id)></i> <i class=\\\"fa fa-upload fa-lg fa-fw\\\" title=\\\"Import Question\\\" style=cursor:pointer aria-hidden=true ngf-select=\\\"vm.importQuestion($file, quesPaper.id)\\\" ng-model=vm.question.file name=file ngf-pattern=\\\"\\'.xlsx\\'\\\" ngf-accept=\\\"\\'.xlsx\\'\\\" ngf-max-size=20MB></i><!-- <button class=\\\"btn btn-default\\\" type=\\\"button\\\" ngf-select=\\\"vm.importQuestion($file)\\\" ng-model=\\\"vm.question.file\\\" name=\\\"file\\\" ngf-pattern=\\\"\\'.xlsx\\'\\\" ngf-accept=\\\"\\'.xlsx\\'\\\" ngf-max-size=\\\"20MB\\\">\\r\\n                                        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Import Questions\\r\\n                                    </button> --></td></tr></tbody></table></uib-tab><uib-tab index=3 heading=Questions select=vm.getAllQuestions(1);vm.tabChange(3); style=\\\"border:1px solid #ddd;border-radius:4px\\\"><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.questionCount></span></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getAllQuestions(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != 1 && vm.getAllQuestions(vm.currentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == vm.lastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != vm.lastPage && vm.getAllQuestions(vm.currentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getAllQuestions(vm.lastPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-valign-middle\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th></th><th>Id</th><th>Question</th><th>Type</th><th><span style=white-space:nowrap>Question Papers</span></th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\\\"question in vm.questions\\\"><th scope=row><input type=checkbox ng-change=vm.questionSelection(); ng-model=question.isSelected></th><td ng-bind=question.id></td><td ng-bind=\\\"question.question | htmlToPlaintext\\\"></td><td ng-bind=question.type></td><td><span ng-repeat=\\\"questionPaper in question.questionPapers\\\"><span style=white-space:nowrap ng-bind=questionPaper.name></span><br ng-if=!$last></span></td><td><i class=\\\"fa fa-pencil-square-o fa-lg fa-fw\\\" title=Edit aria-hidden=true ng-click=\\\"vm.getQuestionById(question.id); \\\" style=vertical-align:-4px></i> <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" title=Delete aria-hidden=true ng-click=vm.deleteQuestion(question.id)></i></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getAllQuestions(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != 1 && vm.getAllQuestions(vm.currentPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentPage == vm.lastPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentPage != vm.lastPage && vm.getAllQuestions(vm.currentPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getAllQuestions(vm.lastPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav></uib-tab></uib-tabset></div><script type=text/ng-template id=editQuestionPaper.html><div class=\\\"modal-header\\\">\\r\\n                <h3 class=\\\"modal-title\\\">Question Paper</h3>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"quesPaper.name\\\">Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"quesPaper.name\\\" placeholder=\\\"Name\\\" ng-model=\\\"quesPaper.name\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"ok();$close();\\\">OK</button>\\r\\n                <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"$close();\\\">Cancel</button>\\r\\n            </div></script><script type=text/ng-template id=addSubjects.html><div class=\\\"modal-header\\\">\\r\\n                <h3 class=\\\"modal-title\\\">Subject</h3>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"subject.name\\\">Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject.name\\\" placeholder=\\\"Name\\\" ng-model=\\\"subject.name\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"ok();$close();\\\">OK</button>\\r\\n                <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"$close();\\\">Cancel</button>\\r\\n            </div></script></div></div></div>\");\n$templateCache.put(\"app/test/testAnswers.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><h3 ng-bind=vm.exam.title></h3></div><div class=\\\"col-md-12 row\\\"><uib-tabset active=vm.selectedTab type=pills justified=true><uib-tab index=0 heading=Scorecard select=\\\"\\\" class=row style=\\\"border:1px solid #ddd;border-radius:4px\\\"><div class=col-md-4 style=margin-top:10px id=exportthis><table class=\\\"table table-striped\\\" style=\\\"border:1px solid #DDD\\\"><tbody><tr><td>Score</td><td ng-bind=vm.userAnswers.score></td></tr><tr><td>Percentile</td><td ng-bind=vm.userAnswers.percentile></td></tr><tr ng-if=false><td>Rank</td><td ng-bind=vm.userAnswers.rank></td></tr><tr><td>Correct</td><td ng-bind=vm.userAnswers.totalCorrect></td></tr><tr><td>Incorrect</td><td ng-bind=vm.userAnswers.totalIncorrect></td></tr><tr><td>Marks Per Question</td><td ng-bind=vm.userAnswers.marksPerQues></td></tr><tr ng-if=vm.userAnswers.negativeMarks><td>Negative Marks</td><td ng-bind=vm.userAnswers.negativeMarks></td></tr></tbody></table></div><div class=col-md-8 style=margin-top:10px><table class=\\\"table table-striped\\\" style=\\\"border:1px solid #DDD\\\"><tbody><tr><th>Name</th><th>Total</th><th>Correct</th><th>Incorrect</th><th>Unanswered</th></tr><tr ng-repeat=\\\"subject in vm.subjectWise\\\"><td ng-bind=subject.name></td><td ng-bind=subject.total></td><td ng-bind=subject.correct></td><td ng-bind=subject.incorrect></td><td ng-bind=subject.unanswered></td></tr></tbody></table></div></uib-tab><uib-tab index=1 heading=Solutions select=\\\"\\\" style=\\\"border:1px solid #ddd;border-radius:4px\\\"><div><table class=table><tbody><tr><td colspan=2><div class=pull-left><span class=\\\"label label-primary\\\">Score: <span ng-bind=vm.userAnswers.score></span></span><!-- <span class=\\\"label label-primary\\\">Rank: <span ng-bind=\\\"vm.userAnswers.rank\\\"></span></span> --></div><div class=pull-right><span class=\\\"label label-success\\\">Correct: <span ng-bind=vm.userAnswers.totalCorrect></span></span> <span class=\\\"label label-danger\\\">Incorrect: <span ng-bind=vm.userAnswers.totalIncorrect></span></span> <span class=\\\"label label-warning\\\">Unanswered: <span ng-bind=vm.userAnswers.totalUnanswered></span></span></div><!-- <input type=\\\"text\\\" ng-model=\\\"vm.searchQue.result\\\" /> --></td></tr><tr ng-repeat=\\\"question in vm.questions | filter: vm.searchQue : true\\\"><th scope=row style=width:2%><div style=padding:4px ng-bind=\\\"$index + 1\\\"></div></th><td><div style=background-color:#F8F8F8;padding:4px ng-if=question.passage ng-bind-html=question.passage></div><div style=background-color:#F8F8F8;padding:4px ng-bind=question.difficultyMeter class=text-right></div><div style=background-color:#F8F8F8;padding:4px ng-bind-html=question.question ng-if=\\\"vm.selectedLang == 1\\\"></div><div><div style=background-color:#F8F8F8;padding:4px ng-bind-html=question.questionText ng-if=\\\"vm.selectedLang == 2\\\"></div><div><u>Options</u>:<p class=options-review ng-repeat=\\\"answer in question.answers | orderBy: \\'ansKey\\'\\\"><span class=badge ng-class=\\\"{ \\'incorrect-answer\\' : question.result==\\'incorrect\\' && answer.ansKey == question.userAnsKey, \\'correct-answer\\' : answer.ansKey == question.correctAnsKey}\\\" ng-bind=answer.ansKey></span> <span style=display:inline-block ng-bind-html=answer.answerText ng-if=\\\"vm.selectedLang == 1\\\"></span> <span style=display:inline-block ng-bind-html=answer.ansText ng-if=\\\"vm.selectedLang == 2\\\"></span></p></div><div ng-if=question.subjectName><b>Subject:</b> <span ng-bind=question.subjectName></span></div><u>Selected Option</u>:<p class=options-review ng-bind-html=question.userAnswer></p><u>Correct Option</u>:<p class=options-review ng-bind-html=question.correctAnswer></p><span ng-bind-html=question.explanation ng-if=\\\"vm.selectedLang == 1\\\"></span> <span ng-bind-html=question.explanationText ng-if=\\\"vm.selectedLang == 2\\\"></span></div></td></tr></tbody></table></div></uib-tab><uib-tab index=2 heading=Ranking select=\\\"\\\" style=\\\"border:1px solid #ddd;border-radius:4px\\\"><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>#</th><th>Roll No.</th><th>Score</th><th>Percentile</th><!-- <th>Rank</th> --></tr></thead><tbody><tr ng-repeat=\\\"user in vm.testUsers\\\"><td ng-bind=$index+1></td><td ng-bind=user.id></td><td ng-bind=user.score></td><td ng-bind=user.percentile></td><!-- <td ng-bind=\\\"user.rank\\\"></td> --></tr></tbody></table></uib-tab></uib-tabset></div></div></div>\");\n$templateCache.put(\"app/test/testHome.html\",\"<div class=row><div class=col-md-12><div ui-view></div></div></div>\");\n$templateCache.put(\"app/test/testSeries.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey\\\"><thead><tr class=success><th>S No.</th><th>Test Series</th><th>Test Plan</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\\\"series in vm.testSeries\\\"><th scope=row ng-bind=\\\"$index + 1\\\"></th><td ng-bind=series.name></td><td><a ng-if=series.testPlan target=_self href={{series.testPlan}} download=file><i class=\\\"fa fa-files-o fa-fw\\\" aria-hidden=true></i></a></td><td><button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.showExam(series) ng-if=series.isSubscribed><i class=\\\"fa fa-play fa-fw\\\" aria-hidden=true></i> Show Tests</button> <button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.subscribeTestSeries(series) ng-if=!series.isSubscribed><i class=\\\"fa fa-play fa-fw\\\" aria-hidden=true></i> Subscribe</button></td></tr></tbody></table></div></div></div></div>\");\n$templateCache.put(\"app/test/testUsers.html\",\"<div class=container-fluid ng-cloak><div class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><form class=\\\"form-inline pull-left\\\" role=search><div class=input-group><input type=text class=form-control placeholder=Search... ng-model=vm.searchText ng-keyup=\\\"($event.which === 13 || !vm.searchText) && vm.searchStudent();\\\"> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button ng-click=vm.searchStudent();>Go!</button></span></div></form><div class=clearfix></div></div><nav aria-label=\\\"Page navigation\\\"><div class=pull-left style=\\\"margin:9px 12px\\\">Total: <span ng-bind=vm.testUserCount></span></div><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getTestUsers(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentTestUserPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentTestUserPage != 1 && vm.getTestUsers(vm.currentTestUserPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentTestUserPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentTestUserPage == vm.lastTestUserPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentTestUserPage != vm.lastTestUserPage && vm.getTestUsers(vm.currentTestUserPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getTestUsers(vm.lastTestUserPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav><table class=\\\"table table-striped table-hover table-bordered\\\" style=\\\"border:1px solid lightgrey;margin-bottom:0px\\\"><thead><tr class=success><th>Roll No.</th><th>Name</th><th>Email</th><th>Phone</th><th>Status</th><th>Correct</th><th>Incorrect</th><th>Score</th><!-- <th>Rank</th> --><th>Percentile</th><th>Time Spent</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\\\"user in vm.testUsers\\\"><td ng-bind=user.id></td><td ng-bind=user.fullName></td><td ng-bind=user.email></td><td ng-bind=user.phone></td><td ng-bind=user.status></td><td ng-bind=user.correctAnswers></td><td ng-bind=user.incorrectAnswers></td><td ng-bind=user.score></td><!-- <td ng-bind=\\\"user.rank\\\"></td> --><td ng-bind=user.percentile></td><td ng-bind=user.timeSpent></td><td><button type=button class=\\\"btn btn-primary btn-xs\\\" ng-click=vm.showAnswers(user.id) ng-if=\\\"user.profileType == \\'student\\'\\\"><i class=\\\"fa fa-newspaper-o fa-fw\\\" aria-hidden=true></i> Review Result</button></td></tr></tbody></table><nav aria-label=\\\"Page navigation\\\"><ul class=\\\"pagination pull-right\\\" style=\\\"margin:4px 2px\\\"><li><a href=javascript:void(0); aria-label=Previous ng-click=vm.getTestUsers(1)><span aria-hidden=true>&laquo;</span></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentTestUserPage == 1}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentTestUserPage != 1 && vm.getTestUsers(vm.currentTestUserPage - 1)\\\">Previous</a></li><li class=active><a href=javascript:void(0); ng-bind=vm.currentTestUserPage></a></li><li ng-class=\\\"{\\'disabled\\': vm.currentTestUserPage == vm.lastTestUserPage}\\\"><a href=javascript:void(0); ng-click=\\\"vm.currentTestUserPage != vm.lastTestUserPage && vm.getTestUsers(vm.currentTestUserPage + 1)\\\">Next</a></li><li><a href=javascript:void(0); aria-label=Next ng-click=vm.getTestUsers(vm.lastTestUserPage)><span aria-hidden=true>&raquo;</span></a></li></ul></nav></div></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=https://github.com/Swiip/generator-gulp-angular><span class=\\\"glyphicon glyphicon-home\\\"></span> Gulp Angular</a></div><div class=\\\"collapse navbar-collapse\\\" id=bs-example-navbar-collapse-6><ul class=\\\"nav navbar-nav\\\"><li class=active><a ng-href=#>Home</a></li><li><a ng-href=#>About</a></li><li><a ng-href=#>Contact</a></li></ul><ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>\");}]);"],"sourceRoot":"/source/"}